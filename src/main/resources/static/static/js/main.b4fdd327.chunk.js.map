{"version":3,"sources":["api/api.js","components/redux/SearchReducer.js","components/Header/PlayingControls.js","selectors/PlayingPlaylistSelector.js","components/redux/PlayingPlaylistReducer.js","components/Header/PlayingControlsContainer.js","components/Header/Header.js","components/redux/ArtistsReducer.js","components/Artist/ArtistsPreview.js","selectors/ArtistSelectors.js","components/Artist/ArtistsPreviewContainer.js","components/redux/PlaylistsPreviewReducer.js","components/Main/AddNewPlaylist.js","components/Main/PlaylistName.js","components/Main/PlaylistsPreviews.js","selectors/PlaylistSelectors.js","components/Main/PlaylistsPreviewsContainer.js","components/Navbar/Tabs.js","components/Playlist/Playlist.js","components/Playlist/PlaylistContainer.js","components/Artist/Artist.js","components/Artist/ArtistContainer.js","components/Album/AlbumCard.js","components/Album/Album.js","selectors/AlbumSelectors.js","components/redux/AlbumReducer.js","components/Album/AlbumContainer.js","components/Search/SearchResult.js","components/redux/SearchSelectors.js","components/Search/SearchResultContainer.js","App.js","reportWebVitals.js","components/redux/redux-store.js","index.js"],"names":["instance","axios","baseURL","process","playlistPreviewsAPI","get","then","response","data","playlistId","delete","newPlaylistName","post","id","name","newName","playlistAPI","playlistTrackId","trackId","artistsAPI","artistId","text","albumAPI","albumId","trackAPI","SEARCH_ARTISTS","SEARCH_TRACKS","initialState","artists","tracks","load","searchReducer","state","action","type","useStyles","makeStyles","theme","container","padding","margin","controls","display","float","marginTop","description","marginLeft","playIcon","height","width","nextPrevIcons","trackName","fontSize","color","artistName","PlayingControls","props","classes","className","Typography","IconButton","aria-label","isPlaying","onClick","pause","play","getIsPlaying","nowPlaying","PLAY","PAUSE","playingList","playingPlaylistReducer","PlayingControlsContainer","this","React","Component","connect","currentPlaylist","dispatch","header","background","h","paddingLeft","paddingTop","textField","searchButton","playingControls","position","right","marginRight","renderTextField","label","input","placeholder","meta","touched","invalid","error","custom","TextField","helperText","InputLabelProps","shrink","variant","size","required","value","undefined","HeaderReduxForm","reduxForm","form","createMuiTheme","palette","primary","blue","AppBar","elevation","style","textDecoration","to","onSubmit","handleSubmit","ThemeProvider","Field","component","validate","HeaderClass","formData","search","searchInput","history","push","bind","compose","status","withRouter","GET_ALL_ARTISTS","GET_CURRENT_ARTIST","GET_CURRENT_ARTIST_ALBUM_PREVIEWS","currentArtist","currentArtistAlbumPreviews","artistsReducer","artist","albumPreviews","root","flexGrow","backgroundColor","paper","typography","content","toolBar","minHeight","table","tableContainer","TableFilling","TableContainer","Paper","Table","TableHead","TableRow","TableCell","TableBody","artistsList","map","row","scope","ArtistsPreview","length","gutterBottom","getArtistsSelector","getCurrentArtist","getCurrentArtistAlbums","ArtistsPreviewContainer","requestArtists","GET_ALL","GET_BY_ID","REMOVE_BY_ID","ADD_TRACK","playlistPreviews","errorOnRemoving","img_URL","trackAdded","requestPlaylistPreviews","getPlaylistById","addTrackById","playlistsPreviewReducer","spacing","openPopupButton","addButton","popover","AddNewPlaylistReduxForm","useState","anchorEl","setAnchorEl","handleClose","open","Boolean","Button","aria-describedby","event","currentTarget","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","AddPlaylist","addNewPlaylist","playlistName","PlaylistName","editMode","activateEditMode","setState","deactivateEditMode","renamePlaylist","onStatusChange","e","prevProps","prevState","snapshot","onDoubleClick","onChange","onBlur","inputProps","maxLength","cardsArea","card","media","typographyCard","CardItem","Card","CardHeader","removeById","CardContent","title","CardMedia","image","PlaylistsPreviews","Grid","justify","item","xs","removePlaylistById","getPlaylistsPreviewsSelector","getImgURL","getCurrentPlaylist","PlaylistsPreviewsContainer","TabPanel","children","index","other","role","hidden","aria-labelledby","Box","p","a11yProps","appBar","get_button","SimpleTabs","setValue","Toolbar","Tabs","newValue","Tab","align","songList","track","Tooltip","removeTrackById","Playlist","trackList","PlaylistContainer","match","params","album","subheader","img","Artist","currentArtistAlbums","imgURL","ArtistContainer","requestCurrentArtist","requestCurrentArtistAlbumPreviews","details","cover","MediaControlCard","albumName","marginBottom","menu","MenuWithProps","enqueueSnackbar","useSnackbar","Menu","keepMounted","playlists","MenuItem","rowId","plName","Album","maxSnack","currentAlbum","getCurrentAlbum","GET_ALBUM_BY_ID","albumReducer","AlbumContainer","requestAlbumById","TracksTable","ArtistsTable","SearchResult","searchResult","getTracksSelector","SearchResultContainer","createSelector","filter","u","App","document","Container","maxWidth","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","formReducer","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","StrictMode","getElementById"],"mappings":"8ZAEMA,E,OAAWC,OAAa,CAC1BC,QAASC,uCAGAC,EAAsB,WAE3B,OAAOJ,EAASK,IAAT,aACFC,MAAK,SAAAC,GACF,OAAOA,EAASC,SAJnBJ,EAAsB,SAOZK,GACf,OAAOT,EAASU,OAAT,6BAAsCD,KARxCL,EAAsB,SAUhBO,GACX,OAAOX,EAASY,KAAT,YAA2B,CAACC,GAAI,EAAGC,KAAMH,KAX3CP,EAAsB,SAahBW,EAASF,GACpB,OAAOb,EAASY,KAAT,YAA2B,CAACC,GAAIA,EAAIC,KAAMC,KAI5CC,EAAc,SACfP,GACJ,OAAOT,EAASK,IAAT,oBAA0BI,IAC5BH,MAAK,SAAAC,GACF,OAAOA,MAJVS,EAAc,SAOPC,GACZ,OAAOjB,EAASU,OAAT,2BAAoCO,KARtCD,EAAc,SAUdP,EAAYS,GACjB,OAAOlB,EAASY,KAAT,wBAA+BH,EAA/B,oBAAqDS,IACvDZ,MAAK,SAAAC,GACF,OAAOA,MAKVY,EAAa,WAElB,OAAOnB,EAASK,IAAT,WACFC,MAAK,SAAAC,GACF,OAAOA,MAJVY,EAAa,SAOLC,GACb,OAAOpB,EAASK,IAAT,kBAAwBe,IAC1Bd,MAAK,SAAAC,GACF,OAAOA,MAVVY,EAAa,SAaCC,GACnB,OAAOpB,EAASK,IAAT,wBAA8Be,IAChCd,MAAK,SAAAC,GACF,OAAOA,MAhBVY,EAAa,SAmBRE,GACV,OAAOrB,EAASK,IAAT,yBAA+BgB,IACjCf,MAAK,SAAAC,GACF,OAAOA,MAKVe,EAAW,SACPC,GACT,OAAOvB,EAASK,IAAT,iBAAuBkB,IACzBjB,MAAK,SAAAC,GACF,OAAOA,MAKViB,EAAW,SACPH,GACT,OAAOrB,EAASK,IAAT,wBAA8BgB,IAChCf,MAAK,SAAAC,GACF,OAAOA,MChFjBkB,EAAiB,iBACjBC,EAAgB,gBAElBC,EAAe,CACfC,QAAS,GACTC,OAAQ,GACRC,MAAM,GAuCKC,EApCO,WAAmC,IAAlCC,EAAiC,uDAAzBL,EAAcM,EAAW,uCACpD,OAAQA,EAAOC,MACX,KAAKT,EACD,OAAO,2BACAO,GADP,IAEIJ,QAASK,EAAOL,UAExB,KAAKF,EACD,OAAO,2BACAM,GADP,IAEIH,OAAQI,EAAOJ,SAEvB,QACI,OAAOG,I,uFChBbG,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,UAAW,CACPC,QAAS,IACTC,OAAQ,KAEZC,SAAU,CACNC,QAAS,eACTC,MAAO,OACPC,UAAW,OAEfC,YAAa,CACTH,QAAS,eACTC,MAAO,QACPC,UAAW,MACXE,WAAY,QAEhBC,SAAU,CACNC,OAAQ,GACRC,MAAO,IAEXC,cAAe,CACXF,OAAQ,GACRC,MAAO,IAEXE,UAAW,CACPC,SAAU,OACVC,MAAO,SAEXC,WAAY,CACRF,SAAU,OACVC,MAAO,aAwCAE,GApCS,SAACC,GAGrB,IAAMC,EAAUtB,KAChB,OACI,sBAAKuB,UAAWD,EAAQnB,UAAxB,UACI,sBAAKoB,UAAWD,EAAQZ,YAAxB,UACI,cAACc,EAAA,EAAD,CAAYD,UAAWD,EAAQN,UAA/B,uBAGA,cAACQ,EAAA,EAAD,CAAYD,UAAWD,EAAQH,WAA/B,2BAIJ,sBAAKI,UAAWD,EAAQhB,SAAxB,UACI,cAACmB,EAAA,EAAD,CAAYC,aAAW,WAAvB,SACI,cAAC,IAAD,CAAkBH,UAAWD,EAAQP,cAAeG,MAAO,gBAE9DG,EAAMM,WACP,cAACF,EAAA,EAAD,CAAYC,aAAW,QAAQE,QAASP,EAAMQ,MAA9C,SACI,cAAC,KAAD,CAAWN,UAAWD,EAAQV,SAAUM,MAAO,iBAGjDG,EAAMM,WACR,cAACF,EAAA,EAAD,CAAYC,aAAW,OAAOE,QAAS,kBAAMP,EAAMS,KAAK,KAAxD,SACI,cAAC,KAAD,CAAeP,UAAWD,EAAQV,SAAUM,MAAO,gBAGvD,cAACO,EAAA,EAAD,CAAYC,aAAW,OAAvB,SACI,cAAC,KAAD,CAAcH,UAAWD,EAAQP,cAAeG,MAAO,uBCtE9Da,GAAe,SAAClC,GACzB,OAAOA,EAAMmC,WAAWL,WCFtBM,GAAO,OACPC,GAAQ,QAEV1C,GAAe,CACf2C,YAAa,GACbR,WAAW,GAqCAS,GAlCgB,WAAmC,IAAlCvC,EAAiC,uDAAzBL,GAAcM,EAAW,uCAC7D,OAAQA,EAAOC,MACX,KAAKkC,GACD,OAAO,2BACApC,GADP,IAEIsC,YAAarC,EAAOJ,OACpBiC,WAAW,IAEnB,KAAKO,GACD,OAAO,2BACArC,GADP,IAEI8B,WAAW,IAEnB,QACI,OAAO9B,IChBbwC,G,uKAEE,OACI,cAAC,GAAD,CAAiBV,UAAWW,KAAKjB,MAAMM,UAAWG,KAAMQ,KAAKjB,MAAMS,KAClDD,MAAOS,KAAKjB,MAAMQ,Y,GAJRU,IAAMC,WCYvCxC,IDCSyC,aAJO,SAAC5C,GAAD,MAAY,CAC9B8B,UAAWI,GAAalC,MAGY,CAACiC,KDWrB,SAACY,GACjB,OAAO,SAACC,GACJA,EALuC,CAAC5C,KAAMkC,GAAMvC,OAKxBgD,MCbWb,MDiB1B,WACjB,OAAO,SAACc,GACJA,EAVuB,CAAC5C,KAAMmC,QCTvBO,CAAwCJ,ICDrCpC,aAAW,SAACC,GAAD,MAAY,CACrC0C,OAAQ,CACJ/B,OAAQ,OACRgC,WAAY,WAEhBC,EAAG,CACCC,YAAa,OACbC,WAAY,OACZ9B,MAAO,WAGX+B,UAAW,CAEPtC,WAAY,QACZF,UAAW,QACXK,MAAO,SAEXoC,aAAc,CACVvC,WAAY,QACZF,UAAW,SAEf0C,gBAAiB,CACbC,SAAU,WACVC,MAAO,IACPC,YAAa,cAKfC,GAAkB,SAAC,GAAD,IACKhC,EADL,EACKA,UACAiC,EAFL,EAEKA,MACAC,EAHL,EAGKA,MACAC,EAJL,EAIKA,YAJL,IAKKC,KAAOC,EALZ,EAKYA,QAASC,EALrB,EAKqBA,QAASC,EAL9B,EAK8BA,MACtBC,EANR,yEASpB,cAACC,EAAA,EAAD,qCACIzC,UAAWA,EACXiC,MAAOA,EACPE,YAAaA,EACbI,MAAOF,GAAWC,EAClBI,WAAYL,GAAWE,GACnBL,GACAM,GAPR,IAQIG,gBAAiB,CACbC,QAAQ,GAEZC,QAAQ,WACRC,KAAK,QACLnD,MAAM,gBAKRoD,GAAW,SAAAC,GAAK,OAAIA,OAAQC,EAAY,KAoCxCC,GAAkBC,YAAU,CAACC,KAAM,UAAjBD,EAlCT,SAACrD,GAEZ,IAAMnB,EAAQ0E,IAAe,CACzBC,QAAS,CACLC,QAASC,OAIXzD,EAAUtB,KAEhB,OACI,eAACgF,EAAA,EAAD,CAAQtG,GAAI,SAAU0E,SAAU,SAAU7B,UAAWD,EAAQsB,OAAQqC,UAAW,EAAhF,UACI,cAAC,IAAD,CAASC,MAAO,CAACC,eAAgB,QAASC,GAAI,QAA9C,SACI,cAAC5D,EAAA,EAAD,CAAYD,UAAWD,EAAQwB,EAAGsB,QAAQ,KAA1C,4BAIJ,sBAAMiB,SAAUhE,EAAMiE,aAAtB,SACI,eAACC,EAAA,EAAD,CAAerF,MAAOA,EAAtB,UACI,cAACsF,EAAA,EAAD,CAAO7G,KAAK,cAAc8G,UAAWlC,GAAiBC,MAAO,iCAASkC,SAAUpB,GACzE/C,UAAWD,EAAQ2B,UAAWS,YAAa,4NAElD,cAACjC,EAAA,EAAD,CAAYF,UAAWD,EAAQ4B,aAAcmB,KAAM,QAAStE,KAAM,SAAUmB,MAAO,YAAnF,SACI,cAAC,IAAD,CAAYA,MAAO,kBAI/B,qBAAKK,UAAWD,EAAQ6B,wBAS9BwC,G,uKAEOC,GACLtD,KAAKjB,MAAMwE,OAAOD,EAASE,aAC3BxD,KAAKjB,MAAM0E,QAAQC,KAAK,a,+BAIxB,OACI,cAACvB,GAAD,CAAiBY,SAAU/C,KAAK+C,SAASY,KAAK3D,Y,GAThCC,IAAMC,WAkBjB0D,eAAQzD,aAFD,SAAC5C,GAAD,MAAY,KAEc,CAACgG,OLlG3B,SAAC3G,GACnB,OAAO,SAACyD,GACJ3D,EAAyBE,GAAMf,MAAK,SAAAC,GALV,IAACqB,EAMC,MAApBrB,EAAS+H,QACTxD,GAPmBlD,EAOSrB,EAASC,KAPL,CAAC0B,KAAMT,EAAgBG,gBAU/DJ,EAAsBH,GAAMf,MAAK,SAAAC,GATR,IAACsB,EAUE,MAApBtB,EAAS+H,QACTxD,GAXkBjD,EAWStB,EAASC,KAXN,CAAC0B,KAAMR,EAAeG,mBKoGT0G,IAA5CF,CAAwDP,I,qEChIjEU,GAAkB,kBAClBC,GAAqB,qBACrBC,GAAoC,oCAEtC/G,GAAe,CACfC,QAAS,GACT+G,cAAe,GACfC,2BAA4B,IA4DjBC,GAzDQ,WAAmC,IAAlC7G,EAAiC,uDAAzBL,GAAcM,EAAW,uCACrD,OAAQA,EAAOC,MACX,KAAKsG,GACD,OAAO,2BACAxG,GADP,IAEIJ,QAASK,EAAOL,UAExB,KAAK6G,GACD,OAAO,2BACAzG,GADP,IAEI2G,cAAe1G,EAAO6G,SAE9B,KAAKJ,GACD,OAAO,2BACA1G,GADP,IAEI4G,2BAA4B3G,EAAO8G,gBAE3C,QACI,OAAO/G,I,gFCrBbG,GAAYC,MAAW,SAACC,GAAD,MAAY,CACjC2G,KAAM,CACFC,SAAU,EACVC,gBAAiB7G,EAAM2E,QAAQhC,WAAWmE,OAE9CC,WAAY,CACR1G,QAAS,eACTI,WAAY,OACZF,UAAW,QAEfyG,QAAS,CAELH,gBAAiB,WAErBI,QAAS,CACLC,UAAW,GACXtG,MAAO,QAEXuG,MAAO,GAIPC,eAAgB,CACZ7G,UAAW,OACXK,MAAO,IACPH,WAAY,YAKlB4G,GAAe,SAAClG,GAClB,IAAMC,EAAUtB,KAChB,OACI,cAACwH,GAAA,EAAD,CAAgBjG,UAAWD,EAAQgG,eAAgB7B,UAAWgC,KAA9D,SACI,eAACC,GAAA,EAAD,CAAOnG,UAAWD,EAAQ+F,MAAOhD,KAAM,QAAvC,UACI,cAACsD,GAAA,EAAD,UACI,cAACC,GAAA,EAAD,UACI,cAACC,GAAA,EAAD,qFAGR,cAACC,GAAA,EAAD,UACKzG,EAAM0G,YAAYC,KAAI,SAACC,GAAD,OACnB,cAACL,GAAA,EAAD,UACI,cAAC,IAAD,CAASxC,GAAI,WAAa6C,EAAIvJ,GAA9B,SACI,cAACmJ,GAAA,EAAD,CAAWpC,UAAU,KAAKyC,MAAM,MAAhC,SACKD,EAAItJ,UAHFsJ,EAAIvJ,eAgC5ByJ,GAlBQ,SAAC9G,GACpB,IAAMC,EAAUtB,KAChB,OACI,qBAAKuB,UAAWD,EAAQuF,KAAxB,SACSxF,EAAM0G,YAAYK,OAAS,GAC5B,sBAAK7G,UAAWD,EAAQ4F,QAAxB,UACI,cAAC1F,EAAA,EAAD,CAAYD,UAAWD,EAAQ2F,WAAY7C,QAAS,KAAMiE,cAAY,EAAtE,iFAGA,8BACI,cAAC,GAAD,CAAcN,YAAa1G,EAAM0G,sBC1E5CO,GAAqB,SAACzI,GAC/B,OAAOA,EAAMJ,QAAQA,SAGZ8I,GAAmB,SAAC1I,GAC7B,OAAOA,EAAMJ,QAAQ+G,eAGZgC,GAAyB,SAAC3I,GACnC,OAAOA,EAAMJ,QAAQgH,4BCFnBgC,G,kLAGEnG,KAAKjB,MAAMqH,mB,+BAIX,OACI,cAAC,GAAD,CAAgBX,YAAazF,KAAKjB,MAAM0G,kB,GARdxF,IAAMC,WAkB7B0D,eAAQzD,aALD,SAAC5C,GAAD,MAAY,CAC9BkI,YAAaO,GAAmBzI,MAIY,CAAC6I,eHanB,WAC1B,OAAO,SAAC/F,GACJ3D,IAA4Bb,MAAK,SAAAC,GAPf,IAACqB,EAQS,MAApBrB,EAAS+H,QACTxD,GATWlD,EASSrB,EAASC,KATL,CAAC0B,KAAMsG,GAAiB5G,oBGRG2G,IAApDF,CAAgEuC,I,2FCxBzEE,GAAU,UACVC,GAAW,YACXC,GAAc,eACdC,GAAY,YAGdtJ,GAAe,CACfuJ,iBAAkB,GAGlBC,iBAAiB,EACjBC,QAAS,uHACTvG,gBAAiB,GACjBwG,YAAY,GAiCHC,GAA0B,WACnC,OAAO,SAACxG,GACJ1E,IAAkCE,MAAK,SAAAE,GACnCsE,EAPsC,CAAC5C,KAAM4I,GAASI,iBAOjC1K,SAmCpB+K,GAAkB,SAAC9K,GAC5B,OAAO,SAACqE,GACJ9D,EAAoBP,GAAYH,MAAK,SAAAC,GA3CX,IAACsE,EA4CC,MAApBtE,EAAS+H,QACTxD,GA7CmBD,EA6CStE,EAASC,KA7CG,CAAC0B,KAAM6I,GAAWlG,0BA6D7D2G,GAAe,SAAC/K,EAAYS,GACrC,OAAO,SAAC4D,GACJ9D,EAAqBP,EAAYS,GAASZ,MAAK,SAAAC,GACnB,MAApBA,EAAS+H,QACTxD,EAhEyB,CAAC5C,KAAM+I,GAAWI,YAgEzB,SAMnBI,GAlGiB,WAAmC,IAAlCzJ,EAAiC,uDAAzBL,GAAcM,EAAW,uCAC9D,OAAQA,EAAOC,MACX,KAAK4I,GACD,OAAO,2BACA9I,GADP,IAEIkJ,iBAAkBjJ,EAAOiJ,mBAEjC,KAAKF,GACD,MAAO,CACHhJ,SAER,KAAK+I,GACD,OAAO,2BACA/I,GADP,IAEI6C,gBAAiB5C,EAAO4C,kBAEhC,KAAMoG,GACF,OAAO,2BACAjJ,GADP,IAEIqJ,WAAYpJ,EAAOoJ,aAE3B,QACI,OAAOrJ,IC3BbG,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrC+G,WAAY,CACR7G,QAASF,EAAMqJ,QAAQ,IAE3BC,gBAAiB,CACb/I,UAAW,OACXS,MAAO,SAEX+B,UAAW,CACP5C,OAAQ,GAEZoJ,UAAW,CACPhJ,UAAW,OACXE,WAAY,MACZO,MAAO,QACP6F,gBAAiB,UACjB,UAAW,CACPA,gBAAiB,YAGzB2C,QAAS,CACLjJ,UAAW,OAIb8C,GAAkB,SAAC,GAAD,IACKC,EADL,EACKA,MACAC,EAFL,EAEKA,MAFL,IAGKE,KAAOC,EAHZ,EAGYA,QAASC,EAHrB,EAGqBA,QAASC,EAH9B,EAG8BA,MACtBC,EAJR,+CAMpB,cAACC,EAAA,EAAD,qCACIR,MAAOA,EACPE,YAAaF,EACbM,MAAOF,GAAWC,EAClBI,WAAYL,GAAWE,GACnBL,GACAM,GANR,IAOIK,QAAQ,WACRC,KAAK,QACLnD,MAAO,gBAIToD,GAAW,SAAAC,GAAK,OAAIA,OAAQC,EAAY,KAgExCmF,GAA0BjF,YAAU,CAACC,KAAM,eAAjBD,EA9DT,SAACrD,GACpB,IAAMnB,EAAQ0E,aAAe,CACzBC,QAAS,CACLC,QAASC,OAGXzD,EAAUtB,KANc,EAOEuC,IAAMqH,SAAS,MAPjB,oBAOvBC,EAPuB,KAObC,EAPa,KAaxBC,EAAc,WAChBD,EAAY,OAEVE,EAAOC,QAAQJ,GACfnL,EAAKsL,EAAO,sBAAmBxF,EAErC,OACI,gCACI,cAAC0F,GAAA,EAAD,CAAQ3I,UAAWD,EAAQkI,gBAAiBtI,MAAM,YAAYiJ,mBAAkBzL,EACxE0F,QAAQ,YACRxC,QAdI,SAACwI,GACjBN,EAAYM,EAAMC,gBAWd,8DAKA,cAACC,GAAA,EAAD,CACI5L,GAAIA,EACJsL,KAAMA,EACNzI,UAAWD,EAAQoI,QACnBG,SAAUA,EACVU,QAASR,EACTS,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,SAZpB,SAeI,cAAClJ,EAAA,EAAD,CAAYD,UAAWD,EAAQ2F,WAA/B,SACI,uBAAM5B,SAAUhE,EAAMiE,aAAtB,UACI,8BACI,cAACC,EAAA,EAAD,CAAerF,MAAOA,EAAtB,SACI,cAACsF,EAAA,EAAD,CAAO7G,KAAK,eAAe8G,UAAWlC,GAAiBC,MAAM,4EACtDkC,SAAUpB,GACV/C,UAAWD,EAAQ2B,gBAGlC,8BACI,cAACiH,GAAA,EAAD,CAAQ3I,UAAWD,EAAQmI,UACnBU,mBAAkBzL,EAClB0F,QAAQ,YAAYrE,KAAM,SAAU6B,QAASmI,EAFrD,mFAatBa,G,uKAEOhF,GACLtD,KAAKjB,MAAMwJ,eAAejF,EAASkF,gB,+BAInC,OACI,cAACnB,GAAD,CAAyBtE,SAAU/C,KAAK+C,SAASY,KAAK3D,Y,GARxCC,IAAMC,WAajBC,eAAQ,KAAM,CAACoI,eDtEA,SAACrM,GAC3B,OAAO,SAACmE,GACJ1E,EAAmCO,GAAiBL,MAAK,SAAAC,GAC7B,MAApBA,EAAS+H,QACTxD,EAASwG,YCkEV1G,CAAgCmI,IC/EhCG,G,4MAnDXlL,MAAQ,CACJmL,UAAU,EACVF,aAAc,EAAKzJ,MAAMyJ,c,EAG7BG,iBAAmB,WACf,EAAKC,SAAS,CACVF,UAAU,K,EAGlBG,mBAAqB,WACjB,EAAKD,SAAS,CACVF,UAAU,IAEd,EAAK3J,MAAM+J,eAAe,EAAKvL,MAAMiL,aAAc,EAAKzJ,MAAM3C,K,EAElE2M,eAAiB,SAACC,GACd,EAAKJ,SAAS,CACVJ,aAAcQ,EAAEjB,cAAc9F,S,iEAInBgH,EAAWC,EAAWC,GACjCF,EAAUT,eAAiBxI,KAAKjB,MAAMyJ,cACtCxI,KAAK4I,SAAS,CACVJ,aAAcxI,KAAKjB,MAAMyJ,iB,+BAMjC,OACI,iCACMxI,KAAKzC,MAAMmL,UACb,cAACxJ,EAAA,EAAD,CAAYkK,cAAepJ,KAAK2I,iBACpB5C,cAAY,EAACjE,QAAQ,KAAKqB,UAAU,KADhD,SAEKnD,KAAKjB,MAAMyJ,eAGfxI,KAAKzC,MAAMmL,UACR,cAAChH,EAAA,EAAD,CAAW2H,SAAUrJ,KAAK+I,eACfO,OAAQtJ,KAAK6I,mBAAoBjK,MAAO,YACxCqD,MAAOjC,KAAKzC,MAAMiL,aAClBe,WAAY,CAAEC,UAAW,a,GA7C7BvJ,IAAMC,WCS3BxC,GAAYC,MAAW,SAACC,GAAD,MAAY,CACrC+G,WAAY,CACR1G,QAAS,eACTI,WAAY,OACZF,UAAW,QAEfsL,UAAW,CACPtL,UAAW,QAEfuL,KAAM,CACFrL,WAAY,OACZG,MAAO,QACPD,OAAQ,OAEZoL,MAAO,CACHpL,OAAQ,SAEZqL,eAAgB,CACZzL,UAAW,QACXE,WAAY,YAIdwL,GAAW,SAAC9K,GACd,IAAMC,EAAUtB,KAEhB,OACI,eAACoM,GAAA,EAAD,CAAM7K,UAAWD,EAAQ0K,KAAzB,UACI,cAACK,GAAA,EAAD,CAAYvM,OACR,cAAC2B,EAAA,EAAD,CAAYC,aAAW,WAAWE,QAAS,WACvCP,EAAMiL,WAAWjL,EAAM3C,KAD3B,SAGI,cAAC,KAAD,QAKR,cAAC6N,GAAA,EAAD,UACI,qBAAKhL,UAAWD,EAAQ4K,eAAxB,SACA,cAAC,GAAD,CAAcpB,aAAczJ,EAAMmL,MAAO9N,GAAI2C,EAAM3C,GAAI0M,eAAgB/J,EAAM+J,qBAGjF,cAAC,IAAD,CAAShG,GAAI,aAAe/D,EAAM3C,GAAlC,SACI,cAAC+N,GAAA,EAAD,CACIlL,UAAWD,EAAQ2K,MACnBS,MAAOrL,EAAM4H,QACbuD,MAAOnL,EAAMmL,cA4ClBG,GArCW,SAACtL,GACvB,IAAMC,EAAUtB,KAEhB,OACI,gCACI,8BACI,eAAC4M,GAAA,EAAD,CACIC,QAAQ,gBACR1M,WAAS,EACToJ,QAAS,GAHb,UAKI,cAACqD,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACI,cAACvL,EAAA,EAAD,CAAYD,UAAWD,EAAQ2F,WAAY7C,QAAQ,KAAKiE,cAAY,EAApE,4GAIJ,cAACuE,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACI,cAAC,GAAD,WAIZ,qBAAKxL,UAAWD,EAAQyK,UAAxB,SACI,cAACa,GAAA,EAAD,CAAMzM,WAAS,EAACoJ,QAAS,EAAzB,SAEKlI,EAAMuF,cAAcoB,KAAI,SAAC8E,GACtB,OAAO,cAACF,GAAA,EAAD,CAAME,MAAI,EAAV,SACH,cAAC,GAAD,CAAUN,MAAOM,EAAKnO,KAAMD,GAAIoO,EAAKpO,GAAI4N,WAAYjL,EAAM2L,mBACjD/D,QAAS5H,EAAM4H,QAASmC,eAAgB/J,EAAM+J,8BC5FvE6B,GAA+B,SAACpN,GACzC,OAAOA,EAAMkJ,iBAAiBA,kBAGrBmE,GAAY,SAACrN,GACtB,OAAOA,EAAMkJ,iBAAiBE,SAGrBkE,GAAqB,SAACtN,GAC/B,OAAOA,EAAMkJ,iBAAiBrG,iBCJ5B0K,G,kLAGE9K,KAAKjB,MAAM8H,4B,+BAIX,OACI,cAAC,GAAD,2BAAuB7G,KAAKjB,OAA5B,IAAmCuF,cAAetE,KAAKjB,MAAM0H,iBAC1CiE,mBAAoB1K,KAAKjB,MAAM2L,mBAC/B/D,QAAS3G,KAAKjB,MAAM4H,QACpBmC,eAAgB9I,KAAKjB,MAAM+J,sB,GAXjB7I,IAAMC,WAuBhCC,gBAPO,SAAC5C,GACnB,MAAO,CACHkJ,iBAAkBkE,GAA6BpN,GAC/CoJ,QAASiE,GAAUrN,MAIa,CAACmN,mBL2BP,SAAC1O,GAC/B,OAAO,SAACqE,GACJ1E,EAAuCK,GAAYH,MAAK,SAAAC,GAC5B,MAApBA,EAAS+H,QACTxD,EAASwG,WK/BoCA,2BAAyBiC,eL+CxD,SAACxM,EAASF,GACpC,OAAO,SAACiE,GACJ1E,EAAmCW,EAASF,GAAIP,MAAK,SAAAC,GACzB,MAApBA,EAAS+H,QACTxD,EAASwG,YKnDV1G,CAAwF2K,ICfvG,SAASC,GAAShM,GAAQ,IACfiM,EAAoCjM,EAApCiM,SAAU/I,EAA0BlD,EAA1BkD,MAAOgJ,EAAmBlM,EAAnBkM,MAAUC,EADb,YACsBnM,EADtB,8BAGrB,OACI,cAACG,EAAA,EAAD,yBACIiE,UAAU,MACVgI,KAAK,WACLC,OAAQnJ,IAAUgJ,EAClB7O,GAAE,0BAAqB6O,GACvBI,kBAAA,qBAA+BJ,IAC3BC,GANR,aAQKjJ,IAAUgJ,GAAS,cAACK,GAAA,EAAD,CAAKC,EAAG,EAAR,SAAYP,OAW5C,SAASQ,GAAUP,GACf,MAAO,CACH7O,GAAG,cAAD,OAAgB6O,GAClB,gBAAgB,mBAAhB,OAAoCA,IAI5C,IAAMvN,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrC2G,KAAM,CACFC,SAAU,EACVC,gBAAiB7G,EAAM2E,QAAQhC,WAAWmE,OAE9C+G,OAAQ,CACJhH,gBAAiB,WAErBiH,WAAY,CACRzN,QAAS,SACTO,MAAO,IAEXkG,MAAO,CACHlG,MAAO,UACPsG,UAAW,OACXvG,OAAQ,OACRF,WAAY,QACZ2C,YAAa,QACbyD,gBAAiB,WAErBI,QAAS,CACLC,UAAW,GACXtG,MAAO,YAGToE,GAAQ,CACV4B,SAAU,EACVjE,WAAY,WAGD,SAASoL,KACpB,IAAM3M,EAAUtB,KADiB,EAEPuC,IAAMqH,SAAS,GAFR,oBAE1BrF,EAF0B,KAEnB2J,EAFmB,KASjC,OACI,sBAAK3M,UAAWD,EAAQuF,KAAxB,UACI,cAAC7B,EAAA,EAAD,CAAQE,MAAOA,GAAO9B,SAAS,SAAS6B,UAAW,EAAnD,SACI,cAACkJ,GAAA,EAAD,CAAS5M,UAAWD,EAAQ6F,QAA5B,SACI,eAACyF,GAAA,EAAD,CACIC,QAAQ,gBACR1M,WAAS,EACToJ,QAAS,GAHb,UAKI,cAACqD,GAAA,EAAD,CAAME,MAAI,EAAV,SACI,eAACsB,GAAA,EAAD,CAAM7J,MAAOA,EAAOoH,SAfvB,SAACvB,EAAOiE,GACzBH,EAASG,IAcuD3M,aAAW,sBAAvD,UACI,cAAC4M,GAAA,EAAD,aAAK9K,MAAM,8CAAcsK,GAAU,KACnC,cAACQ,GAAA,EAAD,aAAK9K,MAAM,sEAAkBsK,GAAU,UAG/C,cAAClB,GAAA,EAAD,CAAME,MAAI,WAKtB,cAACO,GAAD,CAAU9I,MAAOA,EAAOgJ,MAAO,EAA/B,SACI,cAAC9F,GAAA,EAAD,CAAOxC,UAAW,EAAG1D,UAAWD,EAAQ0F,MAAxC,SACI,cAAC,GAAD,QAGR,cAACqG,GAAD,CAAU9I,MAAOA,EAAOgJ,MAAO,EAA/B,SACI,cAAC9F,GAAA,EAAD,CAAOxC,UAAW,EAAG1D,UAAWD,EAAQ0F,MAAxC,SACI,cAAC,GAAD,W,cCjGdhH,GAAYC,MAAW,SAACC,GAAD,MAAY,CACjC2G,KAAM,CACFC,SAAU,EACVC,gBAAiB7G,EAAM2E,QAAQhC,WAAWmE,OAE9CC,WAAY,CACR1G,QAAS,eACTI,WAAY,OACZF,UAAW,QAEfuG,MAAO,CACHlG,MAAO,UACPsG,UAAW,OACXvG,OAAQ,OACRJ,UAAW,OACXE,WAAY,MACZ2C,YAAa,MACbyD,gBAAiB,WAErBI,QAAS,CACLC,UAAW,GACXtG,MAAO,QAEXuG,MAAO,GAIPC,eAAgB,CACZ7G,UAAW,OACXK,MAAO,IACPH,WAAY,YAKlBuE,GAAQ,CACV4B,SAAU,EACVjE,WAAY,WAGV0E,GAAe,SAAClG,GAClB,IAAMC,EAAUtB,KAChB,OACI,cAACwH,GAAA,EAAD,CAAgBjG,UAAWD,EAAQgG,eAAgB7B,UAAWgC,KAA9D,SACI,eAACC,GAAA,EAAD,CAAOnG,UAAWD,EAAQ+F,MAAOhD,KAAM,QAAvC,UACI,cAACsD,GAAA,EAAD,UACI,eAACC,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,2EACA,cAACA,GAAA,EAAD,CAAW0G,MAAM,QAAjB,qFAGR,cAACzG,GAAA,EAAD,UACKzG,EAAMmN,SAASxG,KAAI,SAACC,GAAD,OAChB,eAACL,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAWpC,UAAU,KAAKyC,MAAM,MAAhC,SACKD,EAAIwG,MAAM9P,OAEf,cAACkJ,GAAA,EAAD,CAAW0G,MAAM,QAAjB,SAA0BtG,EAAIwG,MAAMtN,aACpC,cAAC0G,GAAA,EAAD,CAAW0G,MAAM,QAAjB,SACI,cAACG,GAAA,EAAD,CAASlC,MAAO,6CAAhB,SACI,cAAC/K,EAAA,EAAD,CAAY4C,KAAM,QAAS3C,aAAW,WAC1BE,QAAS,WACLP,EAAMsN,gBAAgB1G,EAAIvJ,GAAI2C,EAAM/C,aAFpD,SAII,cAAC,KAAD,YAXD2J,EAAIvJ,eAiD5BkQ,GA1BE,SAACvN,GAEd,IAAMC,EAAUtB,KAEhB,OACI,sBAAKuB,UAAWD,EAAQuF,KAAxB,UACI,cAAC7B,EAAA,EAAD,CAAQE,MAAOA,GAAO9B,SAAS,SAA/B,SACI,cAAC+K,GAAA,EAAD,CAAS5M,UAAWD,EAAQ6F,YAEhC,cAACM,GAAA,EAAD,CAAOxC,UAAW,EAAG1D,UAAWD,EAAQ0F,MAAxC,SACK3F,EAAMqB,gBAAgB/D,MACvB,gCACI,cAAC6C,EAAA,EAAD,CAAYD,UAAWD,EAAQ2F,WAAY7C,QAAQ,KAAKiE,cAAY,EAApE,SACKhH,EAAMqB,gBAAgB/D,OAE3B,cAAC,GAAD,CAAc6P,SAAUnN,EAAMqB,gBAAgBmM,UAChCvQ,WAAY+C,EAAMqB,gBAAgBhE,GAClCiQ,gBAAiBtN,EAAMsN,2BClGnDG,G,kLAGE,IAAIxQ,EAAagE,KAAKjB,MAAM0N,MAAMC,OAAOtQ,GACzC4D,KAAKjB,MAAM+H,gBAAgB9K,K,+BAI3B,OACI,cAAC,GAAD,2BAAcgE,KAAKjB,OAAnB,IAA0BqB,gBAAiBJ,KAAKjB,MAAMqB,gBAC5CiM,gBAAiBrM,KAAKjB,MAAMsN,uB,GAVlBpM,IAAMC,WAqBvB0D,eAAQzD,aALD,SAAC5C,GAAD,MAAY,CACtB6C,gBAAiByK,GAAmBtN,MAIA,CAACuJ,mBAAiBuF,gBRmEnC,SAAC7P,EAAiBR,GAC7C,OAAO,SAACqE,GACJ9D,EAA4BC,GAAiBX,MAAK,SAAAC,GACtB,MAApBA,EAAS+H,QACTxD,EAASyG,GAAgB9K,WQvE4C8H,IAAtEF,CAAkF4I,IClB3F9O,GAAYC,MAAW,SAACC,GAAD,MAAY,CACjC2G,KAAM,CACFC,SAAU,EACVC,gBAAiB7G,EAAM2E,QAAQhC,WAAWmE,OAE9CC,WAAY,CACR1G,QAAS,eACTI,WAAY,OACZF,UAAW,QAEfuG,MAAO,CACHlG,MAAO,UACPsG,UAAW,OACXvG,OAAQ,OACRJ,UAAW,OACXE,WAAY,MACZ2C,YAAa,MACbyD,gBAAiB,WAErBI,QAAS,CACLC,UAAW,GACXtG,MAAO,QAEXkL,KAAM,CACFrL,WAAY,OACZG,MAAO,QACPD,OAAQ,SAEZoL,MAAO,CACHpL,OAAQ,SAEZkL,UAAW,CACPpL,WAAY,OACZF,UAAW,YAKjByE,GAAQ,CACV4B,SAAU,EACVjE,WAAY,WAGVsJ,GAAW,SAAC9K,GACd,IAAMC,EAAUtB,KAEhB,OACI,eAACoM,GAAA,EAAD,CAAM7K,UAAWD,EAAQ0K,KAAzB,UACI,cAACK,GAAA,EAAD,CACIG,MAAOnL,EAAM4N,MACbC,UAAW7N,EAAM1C,OAErB,cAAC,IAAD,CAASyG,GAAI,UAAY/D,EAAMjC,QAA/B,SACI,cAACqN,GAAA,EAAD,CACIlL,UAAWD,EAAQ2K,MACnBS,MAAOrL,EAAM8N,IACb3C,MAAOnL,EAAM1C,aAsClByQ,GA/BA,SAAC/N,GACZ,IAAMC,EAAUtB,KAEhB,OAEI,sBAAKuB,UAAWD,EAAQuF,KAAxB,UACI,cAAC7B,EAAA,EAAD,CAAQE,MAAOA,GAAO9B,SAAS,SAA/B,SACI,cAAC+K,GAAA,EAAD,CAAS5M,UAAWD,EAAQ6F,YAEhC,cAACM,GAAA,EAAD,CAAOxC,UAAW,EAAG1D,UAAWD,EAAQ0F,MAAxC,SACK3F,EAAMmF,cAAc9H,IACrB,gCACI,eAAC8C,EAAA,EAAD,CAAYD,UAAWD,EAAQ2F,WAAY7C,QAAQ,KAAKiE,cAAY,EAApE,UACKhH,EAAMmF,cAAc7H,KAAK,uBAD9B,wGAIA,qBAAK4C,UAAWD,EAAQyK,UAAxB,SACI,cAACa,GAAA,EAAD,CAAMzM,WAAS,EAACoJ,QAAS,EAAzB,SACKlI,EAAMgO,oBAAoBrH,KAAI,SAAC8E,GAAD,OAC3B,cAAC,GAAD,CAAUnO,KAAM0C,EAAMmF,cAAc7H,KAC1BwQ,IAAKrC,EAAKwC,OAAQL,MAAOnC,EAAKnO,KAAMS,QAAS0N,EAAKpO,qBCtFtF6Q,G,kLAGE,IAAItQ,EAAWqD,KAAKjB,MAAM0N,MAAMC,OAAOtQ,GACvC4D,KAAKjB,MAAMmO,qBAAqBvQ,GAChCqD,KAAKjB,MAAMoO,kCAAkCxQ,K,+BAK7C,OACI,cAAC,GAAD,CAAQuH,cAAelE,KAAKjB,MAAMmF,cAC1B6I,oBAAqB/M,KAAKjB,MAAMgO,0B,GAZtB9M,IAAMC,WAsBrB0D,eAAQzD,aALD,SAAC5C,GAAD,MAAY,CAC9B2G,cAAe+B,GAAiB1I,GAChCwP,oBAAqB7G,GAAuB3I,MAI5C,CAAC2P,qBdkB+B,SAACvQ,GACjC,OAAO,SAAC0D,GACJ3D,EAA4BC,GAAUd,MAAK,SAAAC,GAhBnB,IAACuI,EAiBG,MAApBvI,EAAS+H,QACTxD,GAlBiBgE,EAkBSvI,EAASC,KAlBN,CAAC0B,KAAMuG,GAAoBK,iBcJ7C8I,kCd4BsB,SAACxQ,GAC9C,OAAO,SAAC0D,GACJ3D,EAAkCC,GAAUd,MAAK,SAAAC,GAzBZ,IAACwI,EA0BV,MAApBxI,EAAS+H,QACTxD,GA3B8BiE,EA2BSxI,EAASC,KA1B3D,CAAC0B,KAAMwG,GAAmCK,0BcNiBR,IADjDF,CAC6DqJ,ICxBtEvP,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrC2G,KAAM,CACFlG,WAAY,OACZF,UAAW,OACXF,QAAS,OACTO,MAAO,QACPD,OAAQ,SAEZ6O,QAAS,CACLnP,QAAS,QAEb2G,QAAS,CACLzG,UAAW,QAEfkP,MAAO,CACHhP,WAAY,OACZG,MAAO,QACPD,OAAQ,aAID,SAAS+O,GAAiBvO,GACrC,IAAMC,EAAUtB,KAEhB,OACI,qBAAKuB,UAAWD,EAAQuF,KAAxB,SACI,eAACuF,GAAA,EAAD,CAAM7K,UAAWD,EAAQuF,KAAzB,UACI,qBAAKtF,UAAWD,EAAQoO,QAAxB,SACI,eAACnD,GAAA,EAAD,CAAahL,UAAWD,EAAQ4F,QAAhC,UACI,cAAC1F,EAAA,EAAD,CAAYiE,UAAU,KAAKrB,QAAQ,KAAnC,SACK/C,EAAMwO,YAEX,cAACrO,EAAA,EAAD,CAAY4C,QAAQ,YAAYlD,MAAM,gBAAtC,SACKG,EAAMF,kBAKnB,cAACsL,GAAA,EAAD,CACIlL,UAAWD,EAAQqO,MACnBjD,MAAOrL,EAAMiO,c,sDC/B3BtP,GAAYC,MAAW,SAACC,GAAD,MAAY,CACjC2G,KAAM,CACFC,SAAU,EACVC,gBAAiB7G,EAAM2E,QAAQhC,WAAWmE,OAE9CC,WAAY,CACR1G,QAAS,eACTI,WAAY,OACZF,UAAW,QAEfuG,MAAO,CACHlG,MAAO,UACPsG,UAAW,OACXvG,OAAQ,OACRF,WAAY,MACZ2C,YAAa,MACbyD,gBAAiB,WAErBI,QAAS,CACLC,UAAW,GACXtG,MAAO,QAEXuG,MAAO,GACPC,eAAgB,CACZ/G,QAAS,eACTE,UAAW,OACXqP,aAAc,OACdhP,MAAO,IACPH,WAAY,QAEhBoP,KAAM,OAIR7K,GAAQ,CACV4B,SAAU,EACVjE,WAAY,WAGVmN,GAAgB,SAAC3O,GAAW,IACvB4O,EAAmBC,eAAnBD,gBADsB,EAEG1N,IAAMqH,SAAS,MAFlB,oBAEtBC,EAFsB,KAEZC,EAFY,KAQvBC,EAAc,WAChBD,EAAY,OASVxI,EAAUtB,KAEhB,OACI,qCACI,cAACyB,EAAA,EAAD,CAAY4C,KAAM,QAAS3C,aAAW,WAC1BE,QAnBA,SAACwI,GACjBN,EAAYM,EAAMC,gBAiBd,SAGI,cAAC,KAAD,MAEJ,cAAC8F,GAAA,EAAD,CAAM5O,UAAWD,EAAQyO,KACnBrR,GAAG,YACHmL,SAAUA,EACVuG,aAAW,EACXpG,KAAMC,QAAQJ,GACdU,QAASR,EALf,SAOK1I,EAAMgP,UAAUrI,KAAI,SAAC8E,GAAD,OACjB,cAACwD,GAAA,EAAD,CACI1O,QAAS,kBAxBTlD,EAwB0BoO,EAAKpO,GAxB3B6R,EAwB+BlP,EAAMkP,MAxB9BC,EAwBqC1D,EAAKnO,KAxBlCyF,EAwBwC,UAvB3E/C,EAAMgI,aAAa3K,EAAI6R,GACvBN,EAAgB,+KAAqCO,EAAQ,CAACpM,iBAC9D2F,IAHe,IAACrL,EAAI6R,EAAOC,EAAQpM,GAuBvB,SAGK0I,EAAKnO,gBASxB4I,GAAe,SAAClG,GAClB,IAAMC,EAAUtB,KAEhB,OACI,8BACI,cAACwH,GAAA,EAAD,CAAgBjG,UAAWD,EAAQgG,eAAgB7B,UAAWgC,KAA9D,SACI,eAACC,GAAA,EAAD,CAAOnG,UAAWD,EAAQ+F,MAAOhD,KAAM,QAAvC,UACI,cAACsD,GAAA,EAAD,UACI,cAACC,GAAA,EAAD,UACI,cAACC,GAAA,EAAD,+EAGR,cAACC,GAAA,EAAD,UACKzG,EAAMmN,SAASxG,KAAI,SAACC,GAAD,OAChB,eAACL,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAWpC,UAAU,KAAKyC,MAAM,MAAhC,SACKD,EAAItJ,OAET,cAACkJ,GAAA,EAAD,CAAW0G,MAAM,QAAjB,SACI,cAAC,GAAD,CAAe8B,UAAWhP,EAAMgP,UACjBE,MAAOtI,EAAIvJ,GAAI2K,aAAchI,EAAMgI,mBAN3CpB,EAAIvJ,iBA6ChC+R,GA5BD,SAACpP,GACX,IAAMC,EAAUtB,KAEhB,OACI,cAAC,KAAD,CAAkB0Q,SAAU,EAA5B,SACI,sBAAKnP,UAAWD,EAAQuF,KAAxB,UACI,cAAC7B,EAAA,EAAD,CAAQE,MAAOA,GAAO9B,SAAS,SAA/B,SACI,cAAC+K,GAAA,EAAD,CAAS5M,UAAWD,EAAQ6F,YAEhC,cAACM,GAAA,EAAD,CAAOxC,UAAW,EAAG1D,UAAWD,EAAQ0F,MAAxC,SACK3F,EAAMsP,aAAajS,IACpB,gCACI,cAAC,GAAD,CAAWU,QAASiC,EAAMsP,aAAajS,GAC5ByC,WAAYE,EAAMsP,aAAahK,OAAOhI,KACtC2Q,OAAQjO,EAAMsP,aAAarB,OAC3BO,UAAWxO,EAAMsP,aAAahS,OAEzC,cAAC,GAAD,CAAc6P,SAAUnN,EAAMsP,aAAa9B,UAAWwB,UAAWhP,EAAMgP,UACzDhH,aAAchI,EAAMgI,0BCvJ7CuH,GAAkB,SAAC/Q,GAC5B,OAAOA,EAAMoP,MAAM0B,cCEjBE,GAAkB,kBAEpBrR,GAAe,CACfmR,aAAc,IA4BHG,GAzBM,WAAmC,IAAlCjR,EAAiC,uDAAzBL,GAAcM,EAAW,uCACnD,OAAQA,EAAOC,MACX,KAAK8Q,GACD,OAAO,2BACAhR,GADP,IAEI8Q,aAAc7Q,EAAO6Q,eAE7B,QACI,OAAO9Q,ICPbkR,G,kLAGE,IAAI3R,EAAUkD,KAAKjB,MAAM0N,MAAMC,OAAOtQ,GACtC4D,KAAKjB,MAAM2P,iBAAiB5R,K,+BAI5B,OACI,cAAC,GAAD,CAAOuR,aAAcrO,KAAKjB,MAAMsP,aAAcN,UAAW/N,KAAKjB,MAAMgP,UAC7DhH,aAAc/G,KAAKjB,MAAMgI,mB,GAVf9G,IAAMC,WAoBpB0D,eAAQzD,aALD,SAAC5C,GAAD,MAAY,CAC9B8Q,aAAcC,GAAgB/Q,GAC9BwQ,UAAWpD,GAA6BpN,MAGI,CAACmR,iBDNjB,SAAC5R,GAC7B,OAAO,SAACuD,GACJxD,EAAsBC,GAASjB,MAAK,SAAAC,GALb,IAACuS,EAMI,MAApBvS,EAAS+H,QACTxD,GAPgBgO,EAOSvS,EAASC,KAPA,CAAC0B,KAAM8Q,GAAiBF,uBCSPtH,kBAAgBjD,IAApEF,CAAgF6K,ICdzF/Q,GAAYC,MAAW,SAACC,GAAD,MAAY,CACjC2G,KAAM,CACFC,SAAU,EACVC,gBAAiB7G,EAAM2E,QAAQhC,WAAWmE,OAE9CC,WAAY,CACR1G,QAAS,eACTI,WAAY,OACZF,UAAW,QAEfuG,MAAO,CACHlG,MAAO,UACPsG,UAAW,OACXvG,OAAQ,OACRJ,UAAW,OACXE,WAAY,MACZ2C,YAAa,MACbyD,gBAAiB,WAErBI,QAAS,CACLC,UAAW,GACXtG,MAAO,QAEXuG,MAAO,GAIPC,eAAgB,CACZ7G,UAAW,OACXK,MAAO,IACPH,WAAY,YAKlBuE,GAAQ,CACV4B,SAAU,EACVjE,WAAY,WAGVmN,GAAgB,SAAC3O,GAAW,IAAD,EACGkB,IAAMqH,SAAS,MADlB,oBACtBC,EADsB,KACZC,EADY,KAEtBmG,EAAmBC,eAAnBD,gBAMDlG,EAAc,WAChBD,EAAY,OASVxI,EAAUtB,KAEhB,OACI,qCACI,cAACyB,EAAA,EAAD,CAAY4C,KAAM,QAAS3C,aAAW,WAC1BE,QAnBA,SAACwI,GACjBN,EAAYM,EAAMC,gBAiBd,SAGI,cAAC,KAAD,MAEJ,cAAC8F,GAAA,EAAD,CAAM5O,UAAWD,EAAQyO,KACnBrR,GAAG,YACHmL,SAAUA,EACVuG,aAAW,EACXpG,KAAMC,QAAQJ,GACdU,QAASR,EALf,SAOK1I,EAAMgP,UAAUrI,KAAI,SAAC8E,GAAD,OACjB,cAACwD,GAAA,EAAD,CACI1O,QAAS,kBAxBTlD,EAwB0BoO,EAAKpO,GAxB3B6R,EAwB+BlP,EAAMkP,MAxB9BC,EAwBqC1D,EAAKnO,KAxBlCyF,EAwBwC,UAvB3E/C,EAAMgI,aAAa3K,EAAI6R,GACvBN,EAAgB,+KAAqCO,EAAQ,CAACpM,iBAC9D2F,IAHe,IAACrL,EAAI6R,EAAOC,EAAQpM,GAuBvB,SAGK0I,EAAKnO,gBASxBsS,GAAc,SAAC5P,GACjB,IAAMC,EAAUtB,KAEhB,OACI,8BACI,cAACwH,GAAA,EAAD,CAAgBjG,UAAWD,EAAQgG,eAAgB7B,UAAWgC,KAA9D,SACI,eAACC,GAAA,EAAD,CAAOnG,UAAWD,EAAQ+F,MAAOhD,KAAM,QAAvC,UACI,cAACsD,GAAA,EAAD,UACI,eAACC,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,2EACA,cAACA,GAAA,EAAD,sFAGR,cAACC,GAAA,EAAD,UACKzG,EAAMmN,SAASxG,KAAI,SAACC,GAAD,OAChB,eAACL,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAWpC,UAAU,KAAKyC,MAAM,MAAhC,SACKD,EAAItJ,OAET,cAACkJ,GAAA,EAAD,UAAYI,EAAI9G,aAChB,cAAC0G,GAAA,EAAD,CAAW0G,MAAM,QAAjB,SACI,cAAC,GAAD,CAAe8B,UAAWhP,EAAMgP,UACjBE,MAAOtI,EAAIvJ,GAAI2K,aAAchI,EAAMgI,mBAP3CpB,EAAIvJ,iBAkBzCwS,GAAe,SAAC7P,GAClB,IAAMC,EAAUtB,KAChB,OACI,cAACwH,GAAA,EAAD,CAAgBjG,UAAWD,EAAQgG,eAAgB7B,UAAWgC,KAA9D,SACI,eAACC,GAAA,EAAD,CAAOnG,UAAWD,EAAQ+F,MAAOhD,KAAM,QAAvC,UACI,cAACsD,GAAA,EAAD,UACI,cAACC,GAAA,EAAD,UACI,cAACC,GAAA,EAAD,qFAGR,cAACC,GAAA,EAAD,UACKzG,EAAM0G,YAAYC,KAAI,SAACC,GAAD,OACnB,cAACL,GAAA,EAAD,UACI,cAAC,IAAD,CAASxC,GAAI,WAAa6C,EAAIvJ,GAA9B,SACI,cAACmJ,GAAA,EAAD,CAAWpC,UAAU,KAAKyC,MAAM,MAAhC,SACKD,EAAItJ,UAHFsJ,EAAIvJ,eA2C5ByS,GA5BM,SAAC9P,GAClB,IAAMC,EAAUtB,KAChB,OACI,cAAC,KAAD,CAAkB0Q,SAAU,EAA5B,SACI,sBAAKnP,UAAWD,EAAQuF,KAAxB,UACI,cAAC7B,EAAA,EAAD,CAAQE,MAAOA,GAAO9B,SAAS,SAA/B,SACI,cAAC+K,GAAA,EAAD,CAAS5M,UAAWD,EAAQ6F,YAEhC,cAACM,GAAA,EAAD,CAAOxC,UAAW,EAAG1D,UAAWD,EAAQ0F,MAAxC,SACI,gCACI,cAACxF,EAAA,EAAD,CAAYD,UAAWD,EAAQ2F,WAAY7C,QAAS,KAApD,gHAGC/C,EAAM5B,QAAQ2I,OAAS,GACxB,cAAC,GAAD,CAAcL,YAAa1G,EAAM5B,UAEhC4B,EAAM3B,OAAO0I,OAAS,GACvB,cAAC,GAAD,CAAaoG,SAAUnN,EAAM3B,OAAQ2Q,UAAWhP,EAAMgP,UACzChH,aAAchI,EAAMgI,0B,UCnL5Cf,GAAqB,SAACzI,GAC/B,OAAOA,EAAMuR,aAAa3R,SAGjB4R,GAAoB,SAACxR,GAC9B,OAAOA,EAAMuR,aAAa1R,QCGxB4R,IDA4BC,aAAejJ,IAAoB,SAAC7I,GAClE,OAAOA,EAAQ+R,QAAO,SAAAC,GAAC,OAAI,QAIEF,aAAeF,IAAmB,SAAC3R,GAChE,OAAOA,EAAO8R,QAAO,SAAAC,GAAC,OAAI,Q,oNCAtB,OACI,cAAC,GAAD,CAAchS,QAAS6C,KAAKjB,MAAM5B,QAASC,OAAQ4C,KAAKjB,MAAM3B,OAChD2J,aAAc/G,KAAKjB,MAAMgI,aAAcgH,UAAW/N,KAAKjB,MAAMgP,gB,GARnD9N,IAAMC,YAmB3BC,gBANO,SAAC5C,GAAD,MAAY,CAC9BJ,QAAS6I,GAAmBzI,GAC5BH,OAAQ2R,GAAkBxR,GAC1BwQ,UAAWpD,GAA6BpN,MAGJ,CAACwJ,iBAA1B5G,CAAyC6O,ICKzCI,G,kLArBPC,SAASnF,MAAQ,gB,+BAIjB,OACI,8BACI,eAACoF,EAAA,EAAD,CAAWC,UAAU,EAArB,UACI,cAAC,IAAD,CAAUzM,GAAI,UACd,cAAC,GAAD,IACA,cAAC,IAAD,CAAO0M,KAAM,QAASC,OAAQ,kBAAM,cAAC9D,GAAD,OACpC,cAAC,IAAD,CAAO6D,KAAM,gBAAiBC,OAAQ,kBAAM,cAAC,GAAD,OAC5C,cAAC,IAAD,CAAOD,KAAM,cAAeC,OAAQ,kBAAM,cAAC,GAAD,OAC1C,cAAC,IAAD,CAAOD,KAAM,aAAcC,OAAQ,kBAAM,cAAC,GAAD,OACzC,cAAC,IAAD,CAAOD,KAAM,WAAYC,OAAQ,kBAAM,cAAC,GAAD,gB,GAfzCxP,IAAMC,WCCTwP,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB/T,MAAK,YAAkD,IAA/CgU,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,oBCEVO,GAAWC,YAAgB,CACvB9N,KAAM+N,KACN3J,iBAAkBO,GAClB7J,QAASiH,GACTuI,MAAO6B,GACPM,aAAcxR,EACdoC,WAAYI,KAIhBuQ,GAAQC,YAAYJ,GAAUK,YAAgBC,OAEnCH,MAEfI,OAAOJ,MAAQA,G,OCbfK,IAASjB,OACL,cAAC,IAAMkB,WAAP,UACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAUN,MAAOA,GAAjB,SACA,cAAC,GAAD,UAIRhB,SAASuB,eAAe,SAM5BlB,O","file":"static/js/main.b4fdd327.chunk.js","sourcesContent":["import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: process.env.REACT_APP_API_URL\r\n})\r\n\r\nexport const playlistPreviewsAPI = {\r\n    getPreviews() {\r\n        return instance.get(`playlists`)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n    },\r\n    removePlaylistById(playlistId) {\r\n        return instance.delete(`playlists/removepl/${playlistId}`)\r\n    },\r\n    addNewPlaylist(newPlaylistName) {\r\n        return instance.post(`playlists`, {id: 0, name: newPlaylistName})\r\n    },\r\n    renamePlaylist(newName, id) {\r\n        return instance.post(`playlists`, {id: id, name: newName})\r\n    }\r\n}\r\n\r\nexport const playlistAPI = {\r\n    getById(playlistId) {\r\n        return instance.get(`playlists/${playlistId}`)\r\n            .then(response => {\r\n                return response;\r\n            })\r\n    },\r\n    removeTrackById(playlistTrackId) {\r\n        return instance.delete(`playlists/remove/${playlistTrackId}`)\r\n    },\r\n    addTrack(playlistId, trackId) {\r\n        return instance.post(`playlists/add/${playlistId}?trackId=${trackId}`)\r\n            .then(response => {\r\n                return response;\r\n            })\r\n    }\r\n}\r\n\r\nexport const artistsAPI = {\r\n    getArtistsList() {\r\n        return instance.get(`artists`)\r\n            .then(response => {\r\n                return response;\r\n            })\r\n    },\r\n    getCurrentArtist(artistId) {\r\n        return instance.get(`artists/${artistId}`)\r\n            .then(response => {\r\n                return response;\r\n            })\r\n    },\r\n    getCurrentArtistAlbums(artistId) {\r\n        return instance.get(`albums/artist/${artistId}`)\r\n            .then(response => {\r\n                return response;\r\n            })\r\n    },\r\n    searchArtists(text) {\r\n        return instance.get(`artists/search/${text}`)\r\n            .then(response => {\r\n                return response;\r\n            })\r\n    }\r\n}\r\n\r\nexport const albumAPI = {\r\n    getAlbumById(albumId) {\r\n        return instance.get(`albums/${albumId}`)\r\n            .then(response => {\r\n                return response;\r\n            })\r\n    }\r\n}\r\n\r\nexport const trackAPI = {\r\n    searchTracks(text) {\r\n        return instance.get(`tracks/search/${text}`)\r\n            .then(response => {\r\n                return response;\r\n            })\r\n    }\r\n}","import {artistsAPI, trackAPI} from \"../../api/api\";\r\n\r\nconst SEARCH_ARTISTS = 'SEARCH_ARTISTS';\r\nconst SEARCH_TRACKS = 'SEARCH_TRACKS';\r\n\r\nlet initialState = {\r\n    artists: [],\r\n    tracks: [],\r\n    load: false\r\n}\r\n\r\nconst searchReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEARCH_ARTISTS:\r\n            return {\r\n                ...state,\r\n                artists: action.artists\r\n            };\r\n        case SEARCH_TRACKS:\r\n            return {\r\n                ...state,\r\n                tracks: action.tracks\r\n            };\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\nexport const setSearchedArtists = (artists) => ({type: SEARCH_ARTISTS, artists})\r\nexport const setSearchedTracks = (tracks) => ({type: SEARCH_TRACKS, tracks})\r\n\r\nexport const search = (text) => {\r\n    return (dispatch) => {\r\n        artistsAPI.searchArtists(text).then(response => {\r\n            if (response.status === 200) {\r\n                dispatch(setSearchedArtists(response.data))\r\n            }\r\n        })\r\n        trackAPI.searchTracks(text).then(response => {\r\n            if (response.status === 200) {\r\n                dispatch(setSearchedTracks(response.data))\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport default searchReducer;\r\n\r\n","import React from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {IconButton, Typography} from \"@material-ui/core\";\r\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        padding: '0',\r\n        margin: '0',\r\n    },\r\n    controls: {\r\n        display: 'inline-block',\r\n        float: \"left\",\r\n        marginTop: '3px'\r\n    },\r\n    description: {\r\n        display: 'inline-block',\r\n        float: \"right\",\r\n        marginTop: '5px',\r\n        marginLeft: '15px'\r\n    },\r\n    playIcon: {\r\n        height: 35,\r\n        width: 35,\r\n    },\r\n    nextPrevIcons: {\r\n        height: 25,\r\n        width: 25,\r\n    },\r\n    trackName: {\r\n        fontSize: '20px',\r\n        color: 'black'\r\n    },\r\n    artistName: {\r\n        fontSize: '15px',\r\n        color: 'black'\r\n    }\r\n}))\r\n\r\nconst PlayingControls = (props) => {\r\n\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.container}>\r\n            <div className={classes.description}>\r\n                <Typography className={classes.trackName}>\r\n                    trackName\r\n                </Typography>\r\n                <Typography className={classes.artistName}>\r\n                    artistName\r\n                </Typography>\r\n            </div>\r\n            <div className={classes.controls}>\r\n                <IconButton aria-label=\"previous\">\r\n                    <SkipPreviousIcon className={classes.nextPrevIcons} color={\"secondary\"}/>\r\n                </IconButton>\r\n                {props.isPlaying &&\r\n                <IconButton aria-label=\"pause\" onClick={props.pause}>\r\n                    <PauseIcon className={classes.playIcon} color={\"secondary\"}/>\r\n                </IconButton>\r\n                }\r\n                {!props.isPlaying &&\r\n                <IconButton aria-label=\"play\" onClick={() => props.play([])}>\r\n                    <PlayArrowIcon className={classes.playIcon} color={\"secondary\"}/>\r\n                </IconButton>\r\n                }\r\n                <IconButton aria-label=\"next\">\r\n                    <SkipNextIcon className={classes.nextPrevIcons} color={\"secondary\"}/>\r\n                </IconButton>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlayingControls;","\r\nexport const getIsPlaying = (state) => {\r\n    return state.nowPlaying.isPlaying;\r\n}","const PLAY = 'PLAY';\r\nconst PAUSE = 'PAUSE';\r\n\r\nlet initialState = {\r\n    playingList: [],\r\n    isPlaying: false\r\n}\r\n\r\nconst playingPlaylistReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case PLAY:\r\n            return {\r\n                ...state,\r\n                playingList: action.tracks,\r\n                isPlaying: true\r\n            };\r\n        case PAUSE:\r\n            return {\r\n                ...state,\r\n                isPlaying: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport const setPlayingPlaylist = (tracks) => ({type: PLAY, tracks})\r\nexport const setPause = () => ({type: PAUSE})\r\n\r\nexport const play = (currentPlaylist) => {\r\n    return (dispatch) => {\r\n        dispatch(setPlayingPlaylist(currentPlaylist));\r\n    }\r\n}\r\n\r\nexport const pause = () => {\r\n    return (dispatch) => {\r\n        dispatch(setPause())\r\n    }\r\n}\r\n\r\nexport default playingPlaylistReducer;","import React from \"react\";\r\nimport {getIsPlaying} from \"../../selectors/PlayingPlaylistSelector\";\r\nimport {connect} from \"react-redux\";\r\nimport PlayingControls from \"./PlayingControls\";\r\nimport {pause, play} from \"../redux/PlayingPlaylistReducer\";\r\n\r\nclass PlayingControlsContainer extends React.Component {\r\n    render() {\r\n        return (\r\n            <PlayingControls isPlaying={this.props.isPlaying} play={this.props.play}\r\n                             pause={this.props.pause}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isPlaying: getIsPlaying(state)\r\n})\r\n\r\nexport default connect(mapStateToProps, {play, pause})(PlayingControlsContainer)\r\n","import React from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {ThemeProvider} from \"@material-ui/styles\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport createMuiTheme from \"@material-ui/core/styles/createMuiTheme\";\r\nimport blue from \"@material-ui/core/colors/blue\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {connect} from \"react-redux\";\r\nimport {IconButton} from \"@material-ui/core\";\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport {withRouter, NavLink} from \"react-router-dom\";\r\nimport {search} from \"../redux/SearchReducer\";\r\nimport {compose} from \"redux\";\r\nimport PlayingControls from \"./PlayingControls\";\r\nimport PlayingControlsContainer from \"./PlayingControlsContainer\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    header: {\r\n        height: '70px',\r\n        background: '#e8e8e8'\r\n    },\r\n    h: {\r\n        paddingLeft: '90px',\r\n        paddingTop: '15px',\r\n        color: '#f50057',\r\n\r\n    },\r\n    textField: {\r\n        // display: 'inline-block',\r\n        marginLeft: '270px',\r\n        marginTop: '-40px',\r\n        width: '450px',\r\n    },\r\n    searchButton: {\r\n        marginLeft: '-35px',\r\n        marginTop: '-65px',\r\n    },\r\n    playingControls: {\r\n        position: 'absolute',\r\n        right: '0',\r\n        marginRight: '150px'\r\n\r\n    }\r\n}));\r\n\r\nconst renderTextField = ({\r\n                             className,\r\n                             label,\r\n                             input,\r\n                             placeholder,\r\n                             meta: {touched, invalid, error},\r\n                             ...custom\r\n                         }) => (\r\n\r\n    <TextField\r\n        className={className}\r\n        label={label}\r\n        placeholder={placeholder}\r\n        error={touched && invalid}\r\n        helperText={touched && error}\r\n        {...input}\r\n        {...custom}\r\n        InputLabelProps={{\r\n            shrink: true,\r\n        }}\r\n        variant=\"outlined\"\r\n        size=\"small\"\r\n        color=\"secondary\"\r\n    />\r\n\r\n)\r\n\r\nconst required = value => value ? undefined : ' '\r\n\r\nconst Header = (props) => {\r\n\r\n    const theme = createMuiTheme({\r\n        palette: {\r\n            primary: blue,\r\n        },\r\n    });\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <AppBar id={'header'} position={'static'} className={classes.header} elevation={0}>\r\n            <NavLink style={{textDecoration: 'none'}} to={'/home'}>\r\n                <Typography className={classes.h} variant=\"h4\">\r\n                    Shoom &#9836;\r\n                </Typography>\r\n            </NavLink>\r\n            <form onSubmit={props.handleSubmit}>\r\n                <ThemeProvider theme={theme}>\r\n                    <Field name=\"searchInput\" component={renderTextField} label={'Поиск'} validate={required}\r\n                           className={classes.textField} placeholder={'Укажи имя исполнителя или название трека'}\r\n                    />\r\n                    <IconButton className={classes.searchButton} size={'small'} type={\"submit\"} color={\"secondary\"}>\r\n                        <SearchIcon color={\"action\"}></SearchIcon>\r\n                    </IconButton>\r\n                </ThemeProvider>\r\n            </form>\r\n            <div className={classes.playingControls}>\r\n                {/*<PlayingControlsContainer />*/}\r\n            </div>\r\n        </AppBar>\r\n    );\r\n}\r\n\r\nconst HeaderReduxForm = reduxForm({form: 'search'})(Header)\r\n\r\nclass HeaderClass extends React.Component {\r\n\r\n    onSubmit(formData) {\r\n        this.props.search(formData.searchInput)\r\n        this.props.history.push('/search')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <HeaderReduxForm onSubmit={this.onSubmit.bind(this)}\r\n            />\r\n        );\r\n    }\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) => ({})\r\n\r\nexport default compose(connect(mapStateToProps, {search}), withRouter)(HeaderClass)\r\n","import {artistsAPI} from \"../../api/api\";\r\n\r\nconst GET_ALL_ARTISTS = 'GET_ALL_ARTISTS';\r\nconst GET_CURRENT_ARTIST = 'GET_CURRENT_ARTIST';\r\nconst GET_CURRENT_ARTIST_ALBUM_PREVIEWS = 'GET_CURRENT_ARTIST_ALBUM_PREVIEWS';\r\n\r\nlet initialState = {\r\n    artists: [],\r\n    currentArtist: {},\r\n    currentArtistAlbumPreviews: []\r\n}\r\n\r\nconst artistsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_ALL_ARTISTS:\r\n            return {\r\n                ...state,\r\n                artists: action.artists\r\n            };\r\n        case GET_CURRENT_ARTIST:\r\n            return {\r\n                ...state,\r\n                currentArtist: action.artist\r\n            };\r\n        case GET_CURRENT_ARTIST_ALBUM_PREVIEWS:\r\n            return {\r\n                ...state,\r\n                currentArtistAlbumPreviews: action.albumPreviews\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setArtists = (artists) => ({type: GET_ALL_ARTISTS, artists})\r\nexport const setCurrentArtist = (artist) => ({type: GET_CURRENT_ARTIST, artist})\r\nexport const setCurrentArtistAlbumPreviews = (albumPreviews) =>\r\n    ({type: GET_CURRENT_ARTIST_ALBUM_PREVIEWS, albumPreviews})\r\n\r\nexport const requestArtists = () => {\r\n    return (dispatch) => {\r\n        artistsAPI.getArtistsList().then(response => {\r\n            if (response.status === 200) {\r\n                dispatch(setArtists(response.data))\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const requestCurrentArtist = (artistId) => {\r\n    return (dispatch) => {\r\n        artistsAPI.getCurrentArtist(artistId).then(response => {\r\n            if (response.status === 200) {\r\n                dispatch(setCurrentArtist(response.data))\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const requestCurrentArtistAlbumPreviews = (artistId) => {\r\n    return (dispatch) => {\r\n        artistsAPI.getCurrentArtistAlbums(artistId).then(response => {\r\n            if (response.status === 200) {\r\n                dispatch(setCurrentArtistAlbumPreviews(response.data))\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport default artistsReducer;","import React from \"react\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {TableBody, TableContainer, TableHead, Typography} from \"@material-ui/core\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            flexGrow: 1,\r\n            backgroundColor: theme.palette.background.paper,\r\n        },\r\n        typography: {\r\n            display: 'inline-block',\r\n            marginLeft: '40px',\r\n            marginTop: '20px',\r\n        },\r\n        content: {\r\n\r\n            backgroundColor: '#e8e8e8'\r\n        },\r\n        toolBar: {\r\n            minHeight: 36,\r\n            width: \"100%\"\r\n        },\r\n        table: {\r\n            // width: 650,\r\n            // marginLeft: '10px'\r\n        },\r\n        tableContainer: {\r\n            marginTop: '20px',\r\n            width: 650,\r\n            marginLeft: '20px'\r\n        }\r\n    }\r\n))\r\n\r\nconst TableFilling = (props) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <TableContainer className={classes.tableContainer} component={Paper}>\r\n            <Table className={classes.table} size={\"small\"}>\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>Исполнитель</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {props.artistsList.map((row) => (\r\n                        <TableRow key={row.id}>\r\n                            <NavLink to={'/artist/' + row.id}>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    {row.name}\r\n                                </TableCell>\r\n                            </NavLink>\r\n                        </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    )\r\n}\r\n\r\nconst ArtistsPreview = (props) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n                {props.artistsList.length > 0 &&\r\n                <div className={classes.content}>\r\n                    <Typography className={classes.typography} variant={\"h6\"} gutterBottom>\r\n                        Исполнители:\r\n                    </Typography>\r\n                    <div>\r\n                        <TableFilling artistsList={props.artistsList}/>\r\n                    </div>\r\n                </div>\r\n                }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ArtistsPreview;","\r\nexport const getArtistsSelector = (state) => {\r\n    return state.artists.artists\r\n}\r\n\r\nexport const getCurrentArtist = (state) => {\r\n    return state.artists.currentArtist;\r\n}\r\n\r\nexport const getCurrentArtistAlbums = (state) => {\r\n    return state.artists.currentArtistAlbumPreviews;\r\n}","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {requestArtists} from \"../redux/ArtistsReducer\";\r\nimport ArtistsPreview from \"./ArtistsPreview\";\r\nimport {getArtistsSelector} from \"../../selectors/ArtistSelectors\";\r\nimport {compose} from \"redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\nclass ArtistsPreviewContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.requestArtists();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ArtistsPreview artistsList={this.props.artistsList}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    artistsList: getArtistsSelector(state),\r\n\r\n})\r\n\r\nexport default compose(connect(mapStateToProps, {requestArtists}), withRouter)(ArtistsPreviewContainer);","import {playlistAPI, playlistPreviewsAPI} from \"../../api/api\"\r\n\r\nconst GET_ALL = 'GET_ALL';\r\nconst GET_BY_ID= 'GET_BY_ID';\r\nconst REMOVE_BY_ID= 'REMOVE_BY_ID';\r\nconst ADD_TRACK = 'ADD_TRACK';\r\n\r\n\r\nlet initialState = {\r\n    playlistPreviews: [\r\n\r\n    ],\r\n    errorOnRemoving: false,\r\n    img_URL: 'https://images.macrumors.com/t/LGuWSa3kB8rIGbhA7CJm-zusWmg=/1200x1200/smart/article-new/2018/05/apple-music-note.jpg',\r\n    currentPlaylist: {},\r\n    trackAdded: false\r\n}\r\n\r\nconst playlistsPreviewReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_ALL:\r\n            return {\r\n                ...state,\r\n                playlistPreviews: action.playlistPreviews\r\n            };\r\n        case REMOVE_BY_ID:\r\n            return {\r\n                state\r\n            };\r\n        case GET_BY_ID:\r\n            return {\r\n                ...state,\r\n                currentPlaylist: action.currentPlaylist\r\n            };\r\n        case  ADD_TRACK:\r\n            return {\r\n                ...state,\r\n                trackAdded: action.trackAdded\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setPreviews = (playlistPreviews) => ({type: GET_ALL, playlistPreviews})\r\nexport const setCurrentPlaylist = (currentPlaylist) => ({type: GET_BY_ID, currentPlaylist})\r\nexport const addTrack = (trackAdded) => ({type: ADD_TRACK, trackAdded})\r\n\r\nexport const requestPlaylistPreviews = () => {\r\n    return (dispatch) => {\r\n        playlistPreviewsAPI.getPreviews().then(data => {\r\n            dispatch(setPreviews(data))\r\n        })\r\n    }\r\n}\r\n\r\nexport const removePlaylistById = (playlistId) => {\r\n    return (dispatch) => {\r\n        playlistPreviewsAPI.removePlaylistById(playlistId).then(response => {\r\n            if (response.status === 200) {\r\n                dispatch(requestPlaylistPreviews());\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const addNewPlaylist = (newPlaylistName) => {\r\n    return (dispatch) => {\r\n        playlistPreviewsAPI.addNewPlaylist(newPlaylistName).then(response => {\r\n            if (response.status === 200) {\r\n                dispatch(requestPlaylistPreviews())\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const renamePlaylist = (newName, id) => {\r\n    return (dispatch) => {\r\n        playlistPreviewsAPI.renamePlaylist(newName, id).then(response => {\r\n            if (response.status === 200) {\r\n                dispatch(requestPlaylistPreviews())\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const getPlaylistById = (playlistId) => {\r\n    return (dispatch) => {\r\n        playlistAPI.getById(playlistId).then(response => {\r\n            if (response.status === 200) {\r\n                dispatch(setCurrentPlaylist(response.data))\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const removeTrackById = (playlistTrackId, playlistId) => {\r\n    return (dispatch) => {\r\n        playlistAPI.removeTrackById(playlistTrackId).then(response => {\r\n            if (response.status === 200) {\r\n                dispatch(getPlaylistById(playlistId))\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const addTrackById = (playlistId, trackId) => {\r\n    return (dispatch) => {\r\n        playlistAPI.addTrack(playlistId, trackId).then(response => {\r\n            if (response.status === 200) {\r\n                dispatch(addTrack(true))\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport default playlistsPreviewReducer;","import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {createMuiTheme} from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Popover from \"@material-ui/core/Popover\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ThemeProvider from \"@material-ui/styles/ThemeProvider\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport blue from \"@material-ui/core/colors/blue\";\r\nimport {connect} from \"react-redux\";\r\nimport {addNewPlaylist} from \"../redux/PlaylistsPreviewReducer\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    typography: {\r\n        padding: theme.spacing(2),\r\n    },\r\n    openPopupButton: {\r\n        marginTop: '20px',\r\n        color: 'white'\r\n    },\r\n    textField: {\r\n        margin: 4,\r\n    },\r\n    addButton: {\r\n        marginTop: '10px',\r\n        marginLeft: '4px',\r\n        color: 'white',\r\n        backgroundColor: '#2E3B55',\r\n        '&:hover': {\r\n            backgroundColor: '#475c85'\r\n        },\r\n    },\r\n    popover: {\r\n        marginTop: 5\r\n    },\r\n}));\r\n\r\nconst renderTextField = ({\r\n                             label,\r\n                             input,\r\n                             meta: {touched, invalid, error},\r\n                             ...custom\r\n                         }) => (\r\n    <TextField\r\n        label={label}\r\n        placeholder={label}\r\n        error={touched && invalid}\r\n        helperText={touched && error}\r\n        {...input}\r\n        {...custom}\r\n        variant=\"outlined\"\r\n        size=\"small\"\r\n        color={\"secondary\"}\r\n    />\r\n)\r\n\r\nconst required = value => value ? undefined : ' '\r\n\r\nconst AddNewPlaylist = (props) => {\r\n    const theme = createMuiTheme({\r\n        palette: {\r\n            primary: blue,\r\n        },\r\n    });\r\n    const classes = useStyles();\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n    const open = Boolean(anchorEl);\r\n    const id = open ? 'simple-popover' : undefined;\r\n\r\n    return (\r\n        <div>\r\n            <Button className={classes.openPopupButton} color=\"secondary\" aria-describedby={id}\r\n                    variant=\"contained\"\r\n                    onClick={handleClick}>\r\n                Добавить\r\n            </Button>\r\n            <Popover\r\n                id={id}\r\n                open={open}\r\n                className={classes.popover}\r\n                anchorEl={anchorEl}\r\n                onClose={handleClose}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'right',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'right',\r\n                }}\r\n            >\r\n                <Typography className={classes.typography}>\r\n                    <form onSubmit={props.handleSubmit}>\r\n                        <div>\r\n                            <ThemeProvider theme={theme}>\r\n                                <Field name=\"playlistName\" component={renderTextField} label=\"Имя плейлиста\"\r\n                                       validate={required}\r\n                                       className={classes.textField}/>\r\n                            </ThemeProvider>\r\n                        </div>\r\n                        <div>\r\n                            <Button className={classes.addButton}\r\n                                    aria-describedby={id}\r\n                                    variant=\"contained\" type={'submit'} onClick={handleClose}>Сохранить</Button>\r\n                        </div>\r\n                    </form>\r\n                </Typography>\r\n            </Popover>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst AddNewPlaylistReduxForm = reduxForm({form: 'addPlaylist'})(AddNewPlaylist)\r\n\r\nclass AddPlaylist extends React.Component {\r\n\r\n    onSubmit(formData) {\r\n        this.props.addNewPlaylist(formData.playlistName)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <AddNewPlaylistReduxForm onSubmit={this.onSubmit.bind(this)}/>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(null, {addNewPlaylist})(AddPlaylist)","import React from \"react\";\r\nimport {Typography, withStyles} from \"@material-ui/core\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nclass PlaylistName extends React.Component {\r\n\r\n    state = {\r\n        editMode: false,\r\n        playlistName: this.props.playlistName\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        });\r\n    }\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        });\r\n        this.props.renamePlaylist(this.state.playlistName, this.props.id)\r\n    }\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            playlistName: e.currentTarget.value\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.playlistName !== this.props.playlistName) {\r\n            this.setState({\r\n                playlistName: this.props.playlistName\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n                <Typography onDoubleClick={this.activateEditMode}\r\n                            gutterBottom variant=\"h5\" component=\"h2\">\r\n                    {this.props.playlistName}\r\n                </Typography>\r\n                }\r\n                {this.state.editMode &&\r\n                    <TextField onChange={this.onStatusChange}\r\n                               onBlur={this.deactivateEditMode} color={\"secondary\"}\r\n                               value={this.state.playlistName}\r\n                               inputProps={{ maxLength: 15 }}\r\n                    />\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PlaylistName;","import React from \"react\";\r\nimport {CardHeader, Typography} from \"@material-ui/core\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport AddPlaylist from \"./AddNewPlaylist\";\r\nimport PlaylistName from \"./PlaylistName\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    typography: {\r\n        display: 'inline-block',\r\n        marginLeft: '40px',\r\n        marginTop: '20px',\r\n    },\r\n    cardsArea: {\r\n        marginTop: '25px',\r\n    },\r\n    card: {\r\n        marginLeft: '20px',\r\n        width: '300px',\r\n        height: '350'\r\n    },\r\n    media: {\r\n        height: '250px'\r\n    },\r\n    typographyCard: {\r\n        marginTop: '-70px',\r\n        marginLeft: '10px'\r\n    }\r\n}))\r\n\r\nconst CardItem = (props) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Card className={classes.card}>\r\n            <CardHeader action={\r\n                <IconButton aria-label=\"settings\" onClick={() => {\r\n                    props.removeById(props.id)\r\n                }}>\r\n                    <CloseIcon/>\r\n                </IconButton>\r\n            }\r\n\r\n            />\r\n            <CardContent>\r\n                <div className={classes.typographyCard}>\r\n                <PlaylistName playlistName={props.title} id={props.id} renamePlaylist={props.renamePlaylist}/>\r\n                </div>\r\n            </CardContent>\r\n            <NavLink to={'/playlist/' + props.id}>\r\n                <CardMedia\r\n                    className={classes.media}\r\n                    image={props.img_URL}\r\n                    title={props.title}\r\n                />\r\n            </NavLink>\r\n        </Card>\r\n    )\r\n}\r\n\r\nconst PlaylistsPreviews = (props) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Grid\r\n                    justify=\"space-between\"\r\n                    container\r\n                    spacing={24}\r\n                >\r\n                    <Grid item xs={2}>\r\n                        <Typography className={classes.typography} variant=\"h6\" gutterBottom>\r\n                            Плейлисты для Вас\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={10}>\r\n                        <AddPlaylist/>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n            <div className={classes.cardsArea}>\r\n                <Grid container spacing={2}>\r\n\r\n                    {props.albumPreviews.map((item) => {\r\n                        return <Grid item>\r\n                            <CardItem title={item.name} id={item.id} removeById={props.removePlaylistById}\r\n                                      img_URL={props.img_URL} renamePlaylist={props.renamePlaylist}/>\r\n                        </Grid>\r\n                    })}\r\n                </Grid>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default PlaylistsPreviews;","\r\nexport const getPlaylistsPreviewsSelector = (state) => {\r\n    return state.playlistPreviews.playlistPreviews;\r\n}\r\n\r\nexport const getImgURL = (state) => {\r\n    return state.playlistPreviews.img_URL;\r\n}\r\n\r\nexport const getCurrentPlaylist = (state) => {\r\n    return state.playlistPreviews.currentPlaylist;\r\n}","import React from \"react\";\r\nimport PlaylistsPreviews from \"./PlaylistsPreviews\";\r\nimport {connect} from \"react-redux\";\r\nimport {removePlaylistById, renamePlaylist, requestPlaylistPreviews} from \"../redux/PlaylistsPreviewReducer\";\r\nimport {getPlaylistsPreviewsSelector, getImgURL} from \"../../selectors/PlaylistSelectors\";\r\n\r\nclass PlaylistsPreviewsContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.requestPlaylistPreviews();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <PlaylistsPreviews {...this.props} albumPreviews={this.props.playlistPreviews}\r\n                               removePlaylistById={this.props.removePlaylistById}\r\n                               img_URL={this.props.img_URL}\r\n                               renamePlaylist={this.props.renamePlaylist}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        playlistPreviews: getPlaylistsPreviewsSelector(state),\r\n        img_URL: getImgURL(state)\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, {removePlaylistById, requestPlaylistPreviews, renamePlaylist})(PlaylistsPreviewsContainer)\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport ArtistsPreviewContainer from \"../Artist/ArtistsPreviewContainer\";\r\nimport PlaylistsPreviewsContainer from \"../Main/PlaylistsPreviewsContainer\";\r\n\r\nfunction TabPanel(props) {\r\n    const {children, value, index, ...other} = props;\r\n\r\n    return (\r\n        <Typography\r\n            component=\"div\"\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && <Box p={3}>{children}</Box>}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `simple-tab-${index}`,\r\n        'aria-controls': `simple-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    appBar: {\r\n        backgroundColor: '#FE2E64',\r\n    },\r\n    get_button: {\r\n        display: 'inline',\r\n        width: 70\r\n    },\r\n    paper: {\r\n        width: 'inherit',\r\n        minHeight: '82vh',\r\n        height: '100%',\r\n        marginLeft: '-22px',\r\n        marginRight: '-22px',\r\n        backgroundColor: '#e8e8e8'\r\n    },\r\n    toolBar: {\r\n        minHeight: 36,\r\n        width: \"100%\"\r\n    }\r\n}));\r\nconst style = {\r\n    flexGrow: 1,\r\n    background: '#30475e'\r\n};\r\n\r\nexport default function SimpleTabs() {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar style={style} position=\"static\" elevation={3}>\r\n                <Toolbar className={classes.toolBar}>\r\n                    <Grid\r\n                        justify=\"space-between\"\r\n                        container\r\n                        spacing={24}\r\n                    >\r\n                        <Grid item>\r\n                            <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\">\r\n                                <Tab label=\"Главное\" {...a11yProps(0)}/>\r\n                                <Tab label=\"Исполнители\" {...a11yProps(1)} />\r\n                            </Tabs>\r\n                        </Grid>\r\n                        <Grid item>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <TabPanel value={value} index={0}>\r\n                <Paper elevation={3} className={classes.paper}>\r\n                    <PlaylistsPreviewsContainer />\r\n                </Paper>\r\n            </TabPanel>\r\n            <TabPanel value={value} index={1}>\r\n                <Paper elevation={3} className={classes.paper}>\r\n                    <ArtistsPreviewContainer />\r\n                </Paper>\r\n            </TabPanel>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport {Grid, TableBody, TableContainer, TableHead, Typography} from \"@material-ui/core\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            flexGrow: 1,\r\n            backgroundColor: theme.palette.background.paper,\r\n        },\r\n        typography: {\r\n            display: 'inline-block',\r\n            marginLeft: '40px',\r\n            marginTop: '20px',\r\n        },\r\n        paper: {\r\n            width: 'inherit',\r\n            minHeight: '82vh',\r\n            height: '100%',\r\n            marginTop: '25px',\r\n            marginLeft: '2px',\r\n            marginRight: '2px',\r\n            backgroundColor: '#e8e8e8'\r\n        },\r\n        toolBar: {\r\n            minHeight: 36,\r\n            width: \"100%\"\r\n        },\r\n        table: {\r\n            // width: 650,\r\n            // marginLeft: '10px'\r\n        },\r\n        tableContainer: {\r\n            marginTop: '20px',\r\n            width: 650,\r\n            marginLeft: '20px'\r\n        }\r\n    }\r\n))\r\n\r\nconst style = {\r\n    flexGrow: 1,\r\n    background: '#30475e'\r\n};\r\n\r\nconst TableFilling = (props) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <TableContainer className={classes.tableContainer} component={Paper}>\r\n            <Table className={classes.table} size={\"small\"}>\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>Композиция</TableCell>\r\n                        <TableCell align=\"right\">Исполнитель</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {props.songList.map((row) => (\r\n                        <TableRow key={row.id}>\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                                {row.track.name}\r\n                            </TableCell>\r\n                            <TableCell align=\"right\">{row.track.artistName}</TableCell>\r\n                            <TableCell align=\"right\">\r\n                                <Tooltip title={'Удалить'}>\r\n                                    <IconButton size={\"small\"} aria-label=\"settings\"\r\n                                                onClick={() => {\r\n                                                    props.removeTrackById(row.id, props.playlistId)\r\n                                                }}>\r\n                                        <CloseIcon/>\r\n                                    </IconButton>\r\n                                </Tooltip>\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    )\r\n}\r\n\r\nconst Playlist = (props) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar style={style} position=\"static\">\r\n                <Toolbar className={classes.toolBar}/>\r\n            </AppBar>\r\n            <Paper elevation={3} className={classes.paper}>\r\n                {props.currentPlaylist.name &&\r\n                <div>\r\n                    <Typography className={classes.typography} variant=\"h6\" gutterBottom>\r\n                        {props.currentPlaylist.name}\r\n                    </Typography>\r\n                    <TableFilling songList={props.currentPlaylist.trackList}\r\n                                  playlistId={props.currentPlaylist.id}\r\n                                  removeTrackById={props.removeTrackById}\r\n                    />\r\n                </div>\r\n                }\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Playlist;","import React from \"react\";\r\nimport Playlist from \"./Playlist\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {removeTrackById, getPlaylistById} from \"../redux/PlaylistsPreviewReducer\";\r\nimport {compose} from \"redux\";\r\nimport {getCurrentPlaylist} from \"../../selectors/PlaylistSelectors\";\r\n\r\nclass PlaylistContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let playlistId = this.props.match.params.id;\r\n        this.props.getPlaylistById(playlistId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Playlist {...this.props} currentPlaylist={this.props.currentPlaylist}\r\n                      removeTrackById={this.props.removeTrackById}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n            currentPlaylist: getCurrentPlaylist(state)\r\n})\r\n\r\n\r\nexport default compose(connect(mapStateToProps, {getPlaylistById, removeTrackById}), withRouter)(PlaylistContainer);","import makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {CardHeader, Typography} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            flexGrow: 1,\r\n            backgroundColor: theme.palette.background.paper,\r\n        },\r\n        typography: {\r\n            display: 'inline-block',\r\n            marginLeft: '40px',\r\n            marginTop: '20px',\r\n        },\r\n        paper: {\r\n            width: 'inherit',\r\n            minHeight: '82vh',\r\n            height: '100%',\r\n            marginTop: '25px',\r\n            marginLeft: '2px',\r\n            marginRight: '2px',\r\n            backgroundColor: '#e8e8e8'\r\n        },\r\n        toolBar: {\r\n            minHeight: 36,\r\n            width: \"100%\"\r\n        },\r\n        card: {\r\n            marginLeft: '20px',\r\n            width: '300px',\r\n            height: '350px'\r\n        },\r\n        media: {\r\n            height: '270px'\r\n        },\r\n        cardsArea: {\r\n            marginLeft: '20px',\r\n            marginTop: '20px',\r\n        },\r\n    }\r\n))\r\n\r\nconst style = {\r\n    flexGrow: 1,\r\n    background: '#30475e'\r\n};\r\n\r\nconst CardItem = (props) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Card className={classes.card}>\r\n            <CardHeader\r\n                title={props.album}\r\n                subheader={props.name}\r\n            />\r\n            <NavLink to={'/album/' + props.albumId}>\r\n                <CardMedia\r\n                    className={classes.media}\r\n                    image={props.img}\r\n                    title={props.name}\r\n                />\r\n            </NavLink>\r\n        </Card>\r\n    )\r\n}\r\n\r\nconst Artist = (props) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n\r\n        <div className={classes.root}>\r\n            <AppBar style={style} position=\"static\">\r\n                <Toolbar className={classes.toolBar}/>\r\n            </AppBar>\r\n            <Paper elevation={3} className={classes.paper}>\r\n                {props.currentArtist.id &&\r\n                <div>\r\n                    <Typography className={classes.typography} variant=\"h6\" gutterBottom>\r\n                        {props.currentArtist.name}<br/>\r\n                        Доступные альбомы:\r\n                    </Typography>\r\n                    <div className={classes.cardsArea}>\r\n                        <Grid container spacing={2}>\r\n                            {props.currentArtistAlbums.map((item) => (\r\n                                <CardItem name={props.currentArtist.name}\r\n                                          img={item.imgURL} album={item.name} albumId={item.id}/>\r\n                            ))}\r\n                        </Grid>\r\n                    </div>\r\n                </div>\r\n                }\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Artist","import React from \"react\";\r\nimport Artist from \"./Artist\";\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {requestCurrentArtist, requestCurrentArtistAlbumPreviews} from \"../redux/ArtistsReducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {getCurrentArtist, getCurrentArtistAlbums} from \"../../selectors/ArtistSelectors\";\r\n\r\nclass ArtistContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let artistId = this.props.match.params.id;\r\n        this.props.requestCurrentArtist(artistId);\r\n        this.props.requestCurrentArtistAlbumPreviews(artistId);\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Artist currentArtist={this.props.currentArtist}\r\n                    currentArtistAlbums={this.props.currentArtistAlbums}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    currentArtist: getCurrentArtist(state),\r\n    currentArtistAlbums: getCurrentArtistAlbums(state)\r\n})\r\n\r\nexport default compose(connect(mapStateToProps,\r\n    {requestCurrentArtist, requestCurrentArtistAlbumPreviews}), withRouter)(ArtistContainer)","import React from 'react';\r\nimport {makeStyles, useTheme} from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        marginLeft: '10px',\r\n        marginTop: '20px',\r\n        display: 'flex',\r\n        width: '510px',\r\n        height: '250px'\r\n    },\r\n    details: {\r\n        display: 'grid',\r\n    },\r\n    content: {\r\n        marginTop: '70px'\r\n    },\r\n    cover: {\r\n        marginLeft: 'auto',\r\n        width: '250px',\r\n        height: '250px'\r\n    }\r\n}));\r\n\r\nexport default function MediaControlCard(props) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Card className={classes.root}>\r\n                <div className={classes.details}>\r\n                    <CardContent className={classes.content}>\r\n                        <Typography component=\"h5\" variant=\"h5\">\r\n                            {props.albumName}\r\n                        </Typography>\r\n                        <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n                            {props.artistName}\r\n                        </Typography>\r\n                    </CardContent>\r\n\r\n                </div>\r\n                <CardMedia\r\n                    className={classes.cover}\r\n                    image={props.imgURL}\r\n                />\r\n            </Card>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {TableBody, TableContainer, TableHead, Typography} from \"@material-ui/core\";\r\nimport AlbumCard from \"./AlbumCard\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport {SnackbarProvider, useSnackbar} from 'notistack';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            flexGrow: 1,\r\n            backgroundColor: theme.palette.background.paper,\r\n        },\r\n        typography: {\r\n            display: 'inline-block',\r\n            marginLeft: '40px',\r\n            marginTop: '20px',\r\n        },\r\n        paper: {\r\n            width: 'inherit',\r\n            minHeight: '82vh',\r\n            height: '100%',\r\n            marginLeft: '2px',\r\n            marginRight: '2px',\r\n            backgroundColor: '#e8e8e8'\r\n        },\r\n        toolBar: {\r\n            minHeight: 36,\r\n            width: \"100%\"\r\n        },\r\n        table: {},\r\n        tableContainer: {\r\n            display: 'inline-block',\r\n            marginTop: '50px',\r\n            marginBottom: '20px',\r\n            width: 650,\r\n            marginLeft: '20px'\r\n        },\r\n        menu: {}\r\n    }\r\n))\r\n\r\nconst style = {\r\n    flexGrow: 1,\r\n    background: '#30475e'\r\n};\r\n\r\nconst MenuWithProps = (props) => {\r\n    const {enqueueSnackbar} = useSnackbar();\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const handleSave = (id, rowId, plName, variant) => {\r\n        props.addTrackById(id, rowId);\r\n        enqueueSnackbar('Композиция добавлена в плейлист ' + plName, {variant});\r\n        handleClose();\r\n    }\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <>\r\n            <IconButton size={\"small\"} aria-label=\"settings\"\r\n                        onClick={handleClick}\r\n            >\r\n                <SaveIcon/>\r\n            </IconButton>\r\n            <Menu className={classes.menu}\r\n                  id=\"long-menu\"\r\n                  anchorEl={anchorEl}\r\n                  keepMounted\r\n                  open={Boolean(anchorEl)}\r\n                  onClose={handleClose}\r\n            >\r\n                {props.playlists.map((item) => (\r\n                    <MenuItem\r\n                        onClick={() => handleSave(item.id, props.rowId, item.name, 'success')}\r\n                    >\r\n                        {item.name}\r\n                    </MenuItem>\r\n                ))}\r\n            </Menu>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nconst TableFilling = (props) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n            <TableContainer className={classes.tableContainer} component={Paper}>\r\n                <Table className={classes.table} size={\"small\"}>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>Композиция</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {props.songList.map((row) => (\r\n                            <TableRow key={row.id}>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    {row.name}\r\n                                </TableCell>\r\n                                <TableCell align=\"right\">\r\n                                    <MenuWithProps playlists={props.playlists}\r\n                                                   rowId={row.id} addTrackById={props.addTrackById}/>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Album = (props) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <SnackbarProvider maxSnack={3}>\r\n            <div className={classes.root}>\r\n                <AppBar style={style} position=\"static\">\r\n                    <Toolbar className={classes.toolBar}/>\r\n                </AppBar>\r\n                <Paper elevation={3} className={classes.paper}>\r\n                    {props.currentAlbum.id &&\r\n                    <div>\r\n                        <AlbumCard albumId={props.currentAlbum.id}\r\n                                   artistName={props.currentAlbum.artist.name}\r\n                                   imgURL={props.currentAlbum.imgURL}\r\n                                   albumName={props.currentAlbum.name}\r\n                        />\r\n                        <TableFilling songList={props.currentAlbum.trackList} playlists={props.playlists}\r\n                                      addTrackById={props.addTrackById}/>\r\n                    </div>\r\n                    }\r\n                </Paper>\r\n            </div>\r\n        </SnackbarProvider>\r\n    )\r\n\r\n}\r\n\r\nexport default Album;","export const getCurrentAlbum = (state) => {\r\n    return state.album.currentAlbum;\r\n}","import {albumAPI} from \"../../api/api\";\r\n\r\n\r\nconst GET_ALBUM_BY_ID = \"GET_ALBUM_BY_ID\";\r\n\r\nlet initialState = {\r\n    currentAlbum: {}\r\n}\r\n\r\nconst albumReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_ALBUM_BY_ID:\r\n            return {\r\n                ...state,\r\n                currentAlbum: action.currentAlbum\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setCurrentAlbum = (currentAlbum) => ({type: GET_ALBUM_BY_ID, currentAlbum})\r\n\r\n\r\nexport const requestAlbumById = (albumId) => {\r\n    return (dispatch) => {\r\n        albumAPI.getAlbumById(albumId).then(response => {\r\n            if (response.status === 200) {\r\n                dispatch(setCurrentAlbum(response.data))\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport default albumReducer;","import React from \"react\";\r\nimport Album from \"./Album\";\r\nimport {getCurrentAlbum} from \"../../selectors/AlbumSelectors\";\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {requestAlbumById} from \"../redux/AlbumReducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {getPlaylistsPreviewsSelector} from \"../../selectors/PlaylistSelectors\";\r\nimport {addTrackById} from \"../redux/PlaylistsPreviewReducer\";\r\n\r\nclass AlbumContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let albumId = this.props.match.params.id;\r\n        this.props.requestAlbumById(albumId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Album currentAlbum={this.props.currentAlbum} playlists={this.props.playlists}\r\n                   addTrackById={this.props.addTrackById}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    currentAlbum: getCurrentAlbum(state),\r\n    playlists: getPlaylistsPreviewsSelector(state)\r\n})\r\n\r\nexport default compose(connect(mapStateToProps, {requestAlbumById, addTrackById}), withRouter)(AlbumContainer)","import React from \"react\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {TableBody, TableContainer, TableHead, Typography} from \"@material-ui/core\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport {SnackbarProvider, useSnackbar} from 'notistack';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            flexGrow: 1,\r\n            backgroundColor: theme.palette.background.paper,\r\n        },\r\n        typography: {\r\n            display: 'inline-block',\r\n            marginLeft: '40px',\r\n            marginTop: '20px',\r\n        },\r\n        paper: {\r\n            width: 'inherit',\r\n            minHeight: '82vh',\r\n            height: '100%',\r\n            marginTop: '25px',\r\n            marginLeft: '2px',\r\n            marginRight: '2px',\r\n            backgroundColor: '#e8e8e8'\r\n        },\r\n        toolBar: {\r\n            minHeight: 36,\r\n            width: \"100%\"\r\n        },\r\n        table: {\r\n            // width: 650,\r\n            // marginLeft: '10px'\r\n        },\r\n        tableContainer: {\r\n            marginTop: '20px',\r\n            width: 650,\r\n            marginLeft: '20px'\r\n        }\r\n    }\r\n))\r\n\r\nconst style = {\r\n    flexGrow: 1,\r\n    background: '#30475e'\r\n};\r\n\r\nconst MenuWithProps = (props) => {\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const {enqueueSnackbar} = useSnackbar();\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const handleSave = (id, rowId, plName, variant) => {\r\n        props.addTrackById(id, rowId);\r\n        enqueueSnackbar('Композиция добавлена в плейлист ' + plName, {variant});\r\n        handleClose();\r\n    }\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <>\r\n            <IconButton size={\"small\"} aria-label=\"settings\"\r\n                        onClick={handleClick}\r\n            >\r\n                <SaveIcon/>\r\n            </IconButton>\r\n            <Menu className={classes.menu}\r\n                  id=\"long-menu\"\r\n                  anchorEl={anchorEl}\r\n                  keepMounted\r\n                  open={Boolean(anchorEl)}\r\n                  onClose={handleClose}\r\n            >\r\n                {props.playlists.map((item) => (\r\n                    <MenuItem\r\n                        onClick={() => handleSave(item.id, props.rowId, item.name, 'success')}\r\n                    >\r\n                        {item.name}\r\n                    </MenuItem>\r\n                ))}\r\n            </Menu>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nconst TracksTable = (props) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n            <TableContainer className={classes.tableContainer} component={Paper}>\r\n                <Table className={classes.table} size={\"small\"}>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>Композиция</TableCell>\r\n                            <TableCell>Исполнитель</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {props.songList.map((row) => (\r\n                            <TableRow key={row.id}>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    {row.name}\r\n                                </TableCell>\r\n                                <TableCell>{row.artistName}</TableCell>\r\n                                <TableCell align=\"right\">\r\n                                    <MenuWithProps playlists={props.playlists}\r\n                                                   rowId={row.id} addTrackById={props.addTrackById}/>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ArtistsTable = (props) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <TableContainer className={classes.tableContainer} component={Paper}>\r\n            <Table className={classes.table} size={\"small\"}>\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>Исполнитель</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {props.artistsList.map((row) => (\r\n                        <TableRow key={row.id}>\r\n                            <NavLink to={'/artist/' + row.id}>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    {row.name}\r\n                                </TableCell>\r\n                            </NavLink>\r\n                        </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    )\r\n}\r\n\r\n\r\nconst SearchResult = (props) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <SnackbarProvider maxSnack={3}>\r\n            <div className={classes.root}>\r\n                <AppBar style={style} position=\"static\">\r\n                    <Toolbar className={classes.toolBar}/>\r\n                </AppBar>\r\n                <Paper elevation={3} className={classes.paper}>\r\n                    <div>\r\n                        <Typography className={classes.typography} variant={\"h6\"}>\r\n                            Результаты поиска:\r\n                        </Typography>\r\n                        {props.artists.length > 0 &&\r\n                        <ArtistsTable artistsList={props.artists}/>\r\n                        }\r\n                        {props.tracks.length > 0 &&\r\n                        <TracksTable songList={props.tracks} playlists={props.playlists}\r\n                                     addTrackById={props.addTrackById}/>\r\n                        }\r\n                    </div>\r\n                </Paper>\r\n            </div>\r\n        </SnackbarProvider>\r\n    )\r\n}\r\n\r\n\r\nexport default SearchResult;","import {createSelector} from \"reselect\";\r\n\r\nexport const getArtistsSelector = (state) => {\r\n    return state.searchResult.artists;\r\n}\r\n\r\nexport const getTracksSelector = (state) => {\r\n    return state.searchResult.tracks;\r\n}\r\n\r\nexport const getSearchedArtists = createSelector(getArtistsSelector, (artists) => {\r\n    return artists.filter(u => true);\r\n})\r\n\r\n\r\nexport const getSearchedTracks = createSelector(getTracksSelector, (tracks) => {\r\n    return tracks.filter(u => true);\r\n})\r\n\r\n","import React from \"react\";\r\nimport SearchResult from \"./SearchResult\";\r\nimport {\r\n    getArtistsSelector,\r\n    getTracksSelector\r\n} from \"../redux/SearchSelectors\";\r\nimport {connect} from \"react-redux\";\r\nimport {addTrackById} from \"../redux/PlaylistsPreviewReducer\";\r\nimport {getPlaylistsPreviewsSelector} from \"../../selectors/PlaylistSelectors\";\r\n\r\nclass SearchResultContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <SearchResult artists={this.props.artists} tracks={this.props.tracks}\r\n                          addTrackById={this.props.addTrackById} playlists={this.props.playlists}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    artists: getArtistsSelector(state),\r\n    tracks: getTracksSelector(state),\r\n    playlists: getPlaylistsPreviewsSelector(state)\r\n})\r\n\r\nexport default connect(mapStateToProps, {addTrackById})(SearchResultContainer);\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Container from \"@material-ui/core/Container\";\r\nimport HeaderClass from \"./components/Header/Header\";\r\nimport SimpleTabs from \"./components/Navbar/Tabs\";\r\nimport {Redirect, Route} from \"react-router-dom\";\r\nimport PlaylistContainer from \"./components/Playlist/PlaylistContainer\"\r\nimport ArtistContainer from \"./components/Artist/ArtistContainer\";\r\nimport AlbumContainer from \"./components/Album/AlbumContainer\";\r\nimport SearchResultContainer from \"./components/Search/SearchResultContainer\";\r\n\r\nclass App extends React.Component {\r\n    componentDidMount() {\r\n        document.title = 'Shoom Music';\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Container maxWidth={false}>\r\n                    <Redirect to={'/home'} />\r\n                    <HeaderClass/>\r\n                    <Route path={'/home'} render={() => <SimpleTabs />} />\r\n                    <Route path={'/playlist/:id'} render={() => <PlaylistContainer />} />\r\n                    <Route path={'/artist/:id'} render={() => <ArtistContainer />} />\r\n                    <Route path={'/album/:id'} render={() => <AlbumContainer />} />\r\n                    <Route path={'/search/'} render={() => <SearchResultContainer />} />\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {reducer as formReducer} from \"redux-form\"\r\nimport playlistsPreviewReducer from \"./PlaylistsPreviewReducer\";\r\nimport artistsReducer from \"./ArtistsReducer\";\r\nimport albumReducer from \"./AlbumReducer\";\r\nimport searchReducer from \"./SearchReducer\";\r\nimport playingPlaylistReducer from \"./PlayingPlaylistReducer\";\r\n\r\nlet reducers = combineReducers({\r\n        form: formReducer,\r\n        playlistPreviews: playlistsPreviewReducer,\r\n        artists: artistsReducer,\r\n        album: albumReducer,\r\n        searchResult: searchReducer,\r\n        nowPlaying: playingPlaylistReducer\r\n    }\r\n)\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store;\r\n\r\nwindow.store = store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {Provider} from \"react-redux\";\r\nimport store from \"./components/redux/redux-store\";\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport 'typeface-roboto'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <BrowserRouter>\r\n            <Provider store={store}>\r\n            <App/>\r\n            </Provider>\r\n        </BrowserRouter>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}